/*
* generated by Xtext
*/
grammar InternalIbl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package roadblock.xtext.ibl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package roadblock.xtext.ibl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import roadblock.xtext.ibl.services.IblGrammarAccess;

}

@parser::members {
 
 	private IblGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(IblGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelMember
entryRuleModelMember 
:
{ before(grammarAccess.getModelMemberRule()); }
	 ruleModelMember
{ after(grammarAccess.getModelMemberRule()); } 
	 EOF 
;

// Rule ModelMember
ruleModelMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelMemberAccess().getAlternatives()); }
(rule__ModelMember__Alternatives)
{ after(grammarAccess.getModelMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition 
:
{ before(grammarAccess.getVariableDefinitionRule()); }
	 ruleVariableDefinition
{ after(grammarAccess.getVariableDefinitionRule()); } 
	 EOF 
;

// Rule VariableDefinition
ruleVariableDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDefinitionAccess().getGroup()); }
(rule__VariableDefinition__Group__0)
{ after(grammarAccess.getVariableDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition 
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
(rule__FunctionDefinition__Group__0)
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionParameterMember
entryRuleFunctionParameterMember 
:
{ before(grammarAccess.getFunctionParameterMemberRule()); }
	 ruleFunctionParameterMember
{ after(grammarAccess.getFunctionParameterMemberRule()); } 
	 EOF 
;

// Rule FunctionParameterMember
ruleFunctionParameterMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionParameterMemberAccess().getGroup()); }
(rule__FunctionParameterMember__Group__0)
{ after(grammarAccess.getFunctionParameterMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterScope
entryRuleParameterScope 
:
{ before(grammarAccess.getParameterScopeRule()); }
	 ruleParameterScope
{ after(grammarAccess.getParameterScopeRule()); } 
	 EOF 
;

// Rule ParameterScope
ruleParameterScope
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterScopeAccess().getAlternatives()); }
(rule__ParameterScope__Alternatives)
{ after(grammarAccess.getParameterScopeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDefinitionMember
entryRuleFunctionDefinitionMember 
:
{ before(grammarAccess.getFunctionDefinitionMemberRule()); }
	 ruleFunctionDefinitionMember
{ after(grammarAccess.getFunctionDefinitionMemberRule()); } 
	 EOF 
;

// Rule FunctionDefinitionMember
ruleFunctionDefinitionMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDefinitionMemberAccess().getAlternatives()); }
(rule__FunctionDefinitionMember__Alternatives)
{ after(grammarAccess.getFunctionDefinitionMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDefinitionMember
entryRuleVariableDefinitionMember 
:
{ before(grammarAccess.getVariableDefinitionMemberRule()); }
	 ruleVariableDefinitionMember
{ after(grammarAccess.getVariableDefinitionMemberRule()); } 
	 EOF 
;

// Rule VariableDefinitionMember
ruleVariableDefinitionMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDefinitionMemberAccess().getVariableDeclarationParserRuleCall()); }
	ruleVariableDeclaration
{ after(grammarAccess.getVariableDefinitionMemberAccess().getVariableDeclarationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
(rule__VariableDeclaration__Alternatives)
{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableType
entryRuleVariableType 
:
{ before(grammarAccess.getVariableTypeRule()); }
	 ruleVariableType
{ after(grammarAccess.getVariableTypeRule()); } 
	 EOF 
;

// Rule VariableType
ruleVariableType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableTypeAccess().getGroup()); }
(rule__VariableType__Group__0)
{ after(grammarAccess.getVariableTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableAttribute
entryRuleVariableAttribute 
:
{ before(grammarAccess.getVariableAttributeRule()); }
	 ruleVariableAttribute
{ after(grammarAccess.getVariableAttributeRule()); } 
	 EOF 
;

// Rule VariableAttribute
ruleVariableAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAttributeAccess().getGroup()); }
(rule__VariableAttribute__Group__0)
{ after(grammarAccess.getVariableAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableAssignment
entryRuleVariableAssignment 
:
{ before(grammarAccess.getVariableAssignmentRule()); }
	 ruleVariableAssignment
{ after(grammarAccess.getVariableAssignmentRule()); } 
	 EOF 
;

// Rule VariableAssignment
ruleVariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAssignmentAccess().getGroup()); }
(rule__VariableAssignment__Group__0)
{ after(grammarAccess.getVariableAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableExpression
entryRuleVariableExpression 
:
{ before(grammarAccess.getVariableExpressionRule()); }
	 ruleVariableExpression
{ after(grammarAccess.getVariableExpressionRule()); } 
	 EOF 
;

// Rule VariableExpression
ruleVariableExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableExpressionAccess().getGroup()); }
(rule__VariableExpression__Group__0)
{ after(grammarAccess.getVariableExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableExpressionOperator
entryRuleVariableExpressionOperator 
:
{ before(grammarAccess.getVariableExpressionOperatorRule()); }
	 ruleVariableExpressionOperator
{ after(grammarAccess.getVariableExpressionOperatorRule()); } 
	 EOF 
;

// Rule VariableExpressionOperator
ruleVariableExpressionOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableExpressionOperatorAccess().getAlternatives()); }
(rule__VariableExpressionOperator__Alternatives)
{ after(grammarAccess.getVariableExpressionOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveVariableType
entryRulePrimitiveVariableType 
:
{ before(grammarAccess.getPrimitiveVariableTypeRule()); }
	 rulePrimitiveVariableType
{ after(grammarAccess.getPrimitiveVariableTypeRule()); } 
	 EOF 
;

// Rule PrimitiveVariableType
rulePrimitiveVariableType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveVariableTypeAccess().getAlternatives()); }
(rule__PrimitiveVariableType__Alternatives)
{ after(grammarAccess.getPrimitiveVariableTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionID
entryRuleCollectionID 
:
{ before(grammarAccess.getCollectionIDRule()); }
	 ruleCollectionID
{ after(grammarAccess.getCollectionIDRule()); } 
	 EOF 
;

// Rule CollectionID
ruleCollectionID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionIDAccess().getAlternatives()); }
(rule__CollectionID__Alternatives)
{ after(grammarAccess.getCollectionIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleDefinition
entryRuleRuleDefinition 
:
{ before(grammarAccess.getRuleDefinitionRule()); }
	 ruleRuleDefinition
{ after(grammarAccess.getRuleDefinitionRule()); } 
	 EOF 
;

// Rule RuleDefinition
ruleRuleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleDefinitionAccess().getGroup()); }
(rule__RuleDefinition__Group__0)
{ after(grammarAccess.getRuleDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleObject
entryRuleRuleObject 
:
{ before(grammarAccess.getRuleObjectRule()); }
	 ruleRuleObject
{ after(grammarAccess.getRuleObjectRule()); } 
	 EOF 
;

// Rule RuleObject
ruleRuleObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleObjectAccess().getGroup()); }
(rule__RuleObject__Group__0)
{ after(grammarAccess.getRuleObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ModelMember__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMemberAccess().getImportParserRuleCall_0()); }
	ruleImport
{ after(grammarAccess.getModelMemberAccess().getImportParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModelMemberAccess().getVariableDefinitionParserRuleCall_1()); }
	ruleVariableDefinition
{ after(grammarAccess.getModelMemberAccess().getVariableDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getModelMemberAccess().getFunctionDefinitionParserRuleCall_2()); }
	ruleFunctionDefinition
{ after(grammarAccess.getModelMemberAccess().getFunctionDefinitionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterScope__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterScopeAccess().getRequiredKeyword_0()); }

	'required' 

{ after(grammarAccess.getParameterScopeAccess().getRequiredKeyword_0()); }
)

    |(
{ before(grammarAccess.getParameterScopeAccess().getReturnedKeyword_1()); }

	'returned' 

{ after(grammarAccess.getParameterScopeAccess().getReturnedKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionMember__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionMemberAccess().getRuleDefinitionParserRuleCall_0()); }
	ruleRuleDefinition
{ after(grammarAccess.getFunctionDefinitionMemberAccess().getRuleDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFunctionDefinitionMemberAccess().getVariableAssignmentParserRuleCall_1()); }
	ruleVariableAssignment
{ after(grammarAccess.getFunctionDefinitionMemberAccess().getVariableAssignmentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_0()); }
(rule__VariableDeclaration__Group_0__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_1()); }
(rule__VariableDeclaration__Group_1__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__PrimitiveAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypeAccess().getPrimitivePrimitiveVariableTypeParserRuleCall_1_0_0()); }
	rulePrimitiveVariableType
{ after(grammarAccess.getVariableTypeAccess().getPrimitivePrimitiveVariableTypeParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getVariableTypeAccess().getPrimitiveIDTerminalRuleCall_1_0_1()); }
	RULE_ID
{ after(grammarAccess.getVariableTypeAccess().getPrimitiveIDTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpressionOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableExpressionOperatorAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getVariableExpressionOperatorAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getVariableExpressionOperatorAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getVariableExpressionOperatorAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getVariableExpressionOperatorAccess().getVerticalLineKeyword_2()); }

	'|' 

{ after(grammarAccess.getVariableExpressionOperatorAccess().getVerticalLineKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveVariableType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveVariableTypeAccess().getIDKeyword_0()); }

	'ID' 

{ after(grammarAccess.getPrimitiveVariableTypeAccess().getIDKeyword_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveVariableTypeAccess().getURIKeyword_1()); }

	'URI' 

{ after(grammarAccess.getPrimitiveVariableTypeAccess().getURIKeyword_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveVariableTypeAccess().getDNAKeyword_2()); }

	'DNA' 

{ after(grammarAccess.getPrimitiveVariableTypeAccess().getDNAKeyword_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveVariableTypeAccess().getCHASSISKeyword_3()); }

	'CHASSIS' 

{ after(grammarAccess.getPrimitiveVariableTypeAccess().getCHASSISKeyword_3()); }
)

    |(
{ before(grammarAccess.getPrimitiveVariableTypeAccess().getPROCESSKeyword_4()); }

	'PROCESS' 

{ after(grammarAccess.getPrimitiveVariableTypeAccess().getPROCESSKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionIDAccess().getLISTKeyword_0()); }

	'LIST' 

{ after(grammarAccess.getCollectionIDAccess().getLISTKeyword_0()); }
)

    |(
{ before(grammarAccess.getCollectionIDAccess().getSETKeyword_1()); }

	'SET' 

{ after(grammarAccess.getCollectionIDAccess().getSETKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getHyphenMinusGreaterThanSignKeyword_5_0()); }

	'->' 

{ after(grammarAccess.getRuleDefinitionAccess().getHyphenMinusGreaterThanSignKeyword_5_0()); }
)

    |(
{ before(grammarAccess.getRuleDefinitionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_5_1()); }

	'<->' 

{ after(grammarAccess.getRuleDefinitionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAction_0()); }
(

)
{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMembersAssignment_1()); }
(rule__Model__MembersAssignment_1)*
{ after(grammarAccess.getModelAccess().getMembersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__0__Impl
	rule__VariableDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getVariableDefinitionAction_0()); }
(

)
{ after(grammarAccess.getVariableDefinitionAccess().getVariableDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__1__Impl
	rule__VariableDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getDefineKeyword_1()); }

	'define' 

{ after(grammarAccess.getVariableDefinitionAccess().getDefineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__2__Impl
	rule__VariableDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getTypeAssignment_2()); }
(rule__VariableDefinition__TypeAssignment_2)?
{ after(grammarAccess.getVariableDefinitionAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__3__Impl
	rule__VariableDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNameAssignment_3()); }
(rule__VariableDefinition__NameAssignment_3)
{ after(grammarAccess.getVariableDefinitionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__4__Impl
	rule__VariableDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getVariableDefinitionAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__5__Impl
	rule__VariableDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getMembersAssignment_5()); }
(rule__VariableDefinition__MembersAssignment_5)*
{ after(grammarAccess.getVariableDefinitionAccess().getMembersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getVariableDefinitionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FunctionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0()); }
(

)
{ after(grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getDefineKeyword_1()); }

	'define' 

{ after(grammarAccess.getFunctionDefinitionAccess().getDefineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getTypeAssignment_2()); }
(rule__FunctionDefinition__TypeAssignment_2)?
{ after(grammarAccess.getFunctionDefinitionAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__3__Impl
	rule__FunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_3()); }
(rule__FunctionDefinition__NameAssignment_3)
{ after(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__4__Impl
	rule__FunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__5__Impl
	rule__FunctionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_5()); }
(rule__FunctionDefinition__ParametersAssignment_5)*
{ after(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__6__Impl
	rule__FunctionDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_6()); }
(rule__FunctionDefinition__ParametersAssignment_6)
{ after(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__7__Impl
	rule__FunctionDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_7()); }
(rule__FunctionDefinition__Group_7__0)*
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__8__Impl
	rule__FunctionDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__9__Impl
	rule__FunctionDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getLeftCurlyBracketKeyword_9()); }

	'{' 

{ after(grammarAccess.getFunctionDefinitionAccess().getLeftCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__10__Impl
	rule__FunctionDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getMembersAssignment_10()); }
(rule__FunctionDefinition__MembersAssignment_10)*
{ after(grammarAccess.getFunctionDefinitionAccess().getMembersAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getRightCurlyBracketKeyword_11()); }

	'}' 

{ after(grammarAccess.getFunctionDefinitionAccess().getRightCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__FunctionDefinition__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_7__0__Impl
	rule__FunctionDefinition__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_7_1()); }
(rule__FunctionDefinition__ParametersAssignment_7_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionParameterMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionParameterMember__Group__0__Impl
	rule__FunctionParameterMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameterMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParameterMemberAccess().getTypeAssignment_0()); }
(rule__FunctionParameterMember__TypeAssignment_0)
{ after(grammarAccess.getFunctionParameterMemberAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionParameterMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionParameterMember__Group__1__Impl
	rule__FunctionParameterMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameterMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParameterMemberAccess().getNameAssignment_1()); }
(rule__FunctionParameterMember__NameAssignment_1)
{ after(grammarAccess.getFunctionParameterMemberAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionParameterMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionParameterMember__Group__2__Impl
	rule__FunctionParameterMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameterMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParameterMemberAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getFunctionParameterMemberAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionParameterMember__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionParameterMember__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameterMember__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParameterMemberAccess().getScopeAssignment_3()); }
(rule__FunctionParameterMember__ScopeAssignment_3)
{ after(grammarAccess.getFunctionParameterMemberAccess().getScopeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_0__0__Impl
	rule__VariableDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0_0()); }
(

)
{ after(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_0_1()); }
(rule__VariableDeclaration__Group_0_1__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_0_1__0__Impl
	rule__VariableDeclaration__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0_1_0()); }
(rule__VariableDeclaration__TypeAssignment_0_1_0)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0_1_1()); }
(rule__VariableDeclaration__NameAssignment_0_1_1)
{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_1__0__Impl
	rule__VariableDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getCollectionAssignment_1_0()); }
(rule__VariableDeclaration__CollectionAssignment_1_0)
{ after(grammarAccess.getVariableDeclarationAccess().getCollectionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_1__1__Impl
	rule__VariableDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getLessThanSignKeyword_1_1()); }

	'<' 

{ after(grammarAccess.getVariableDeclarationAccess().getLessThanSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_1__2__Impl
	rule__VariableDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_1_2()); }
(rule__VariableDeclaration__TypeAssignment_1_2)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_1__3__Impl
	rule__VariableDeclaration__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getVariableDeclarationAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1_4()); }
(rule__VariableDeclaration__NameAssignment_1_4)
{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VariableType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableType__Group__0__Impl
	rule__VariableType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypeAccess().getVariableTypeAction_0()); }
(

)
{ after(grammarAccess.getVariableTypeAccess().getVariableTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypeAccess().getPrimitiveAssignment_1()); }
(rule__VariableType__PrimitiveAssignment_1)
{ after(grammarAccess.getVariableTypeAccess().getPrimitiveAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAttribute__Group__0__Impl
	rule__VariableAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAttributeAccess().getVariableAttributeAction_0()); }
(

)
{ after(grammarAccess.getVariableAttributeAccess().getVariableAttributeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAttribute__Group__1__Impl
	rule__VariableAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAttributeAccess().getNameAssignment_1()); }
(rule__VariableAttribute__NameAssignment_1)
{ after(grammarAccess.getVariableAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAttributeAccess().getGroup_2()); }
(rule__VariableAttribute__Group_2__0)?
{ after(grammarAccess.getVariableAttributeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableAttribute__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAttribute__Group_2__0__Impl
	rule__VariableAttribute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAttribute__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAttributeAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getVariableAttributeAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAttribute__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAttribute__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAttribute__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAttributeAccess().getAttributeAssignment_2_1()); }
(rule__VariableAttribute__AttributeAssignment_2_1)
{ after(grammarAccess.getVariableAttributeAccess().getAttributeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__0__Impl
	rule__VariableAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getVariableAssignmentAction_0()); }
(

)
{ after(grammarAccess.getVariableAssignmentAccess().getVariableAssignmentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__1__Impl
	rule__VariableAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getVariableAssignment_1()); }
(rule__VariableAssignment__VariableAssignment_1)
{ after(grammarAccess.getVariableAssignmentAccess().getVariableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__2__Impl
	rule__VariableAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getVariableAssignmentAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getExpressionAssignment_3()); }
(rule__VariableAssignment__ExpressionAssignment_3)
{ after(grammarAccess.getVariableAssignmentAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableExpression__Group__0__Impl
	rule__VariableExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableExpressionAccess().getVariableExpressionAction_0()); }
(

)
{ after(grammarAccess.getVariableExpressionAccess().getVariableExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableExpression__Group__1__Impl
	rule__VariableExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableExpressionAccess().getMembersAssignment_1()); }
(rule__VariableExpression__MembersAssignment_1)
{ after(grammarAccess.getVariableExpressionAccess().getMembersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableExpressionAccess().getGroup_2()); }
(rule__VariableExpression__Group_2__0)*
{ after(grammarAccess.getVariableExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableExpression__Group_2__0__Impl
	rule__VariableExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableExpressionAccess().getVariableExpressionOperatorParserRuleCall_2_0()); }
	ruleVariableExpressionOperator
{ after(grammarAccess.getVariableExpressionAccess().getVariableExpressionOperatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableExpressionAccess().getMembersAssignment_2_1()); }
(rule__VariableExpression__MembersAssignment_2_1)
{ after(grammarAccess.getVariableExpressionAccess().getMembersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group__0__Impl
	rule__RuleDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getRuleDefinitionAction_0()); }
(

)
{ after(grammarAccess.getRuleDefinitionAccess().getRuleDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group__1__Impl
	rule__RuleDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getRULEKeyword_1()); }

	'RULE' 

{ after(grammarAccess.getRuleDefinitionAccess().getRULEKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group__2__Impl
	rule__RuleDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getNameAssignment_2()); }
(rule__RuleDefinition__NameAssignment_2)
{ after(grammarAccess.getRuleDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group__3__Impl
	rule__RuleDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getRuleDefinitionAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group__4__Impl
	rule__RuleDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getGroup_4()); }
(rule__RuleDefinition__Group_4__0)?
{ after(grammarAccess.getRuleDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group__5__Impl
	rule__RuleDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getAlternatives_5()); }
(rule__RuleDefinition__Alternatives_5)
{ after(grammarAccess.getRuleDefinitionAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getGroup_6()); }
(rule__RuleDefinition__Group_6__0)?
{ after(grammarAccess.getRuleDefinitionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__RuleDefinition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group_4__0__Impl
	rule__RuleDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getLhsAssignment_4_0()); }
(rule__RuleDefinition__LhsAssignment_4_0)
{ after(grammarAccess.getRuleDefinitionAccess().getLhsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDefinition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getGroup_4_1()); }
(rule__RuleDefinition__Group_4_1__0)*
{ after(grammarAccess.getRuleDefinitionAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDefinition__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group_4_1__0__Impl
	rule__RuleDefinition__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getPlusSignKeyword_4_1_0()); }

	'+' 

{ after(grammarAccess.getRuleDefinitionAccess().getPlusSignKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDefinition__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getLhsAssignment_4_1_1()); }
(rule__RuleDefinition__LhsAssignment_4_1_1)
{ after(grammarAccess.getRuleDefinitionAccess().getLhsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDefinition__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group_6__0__Impl
	rule__RuleDefinition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getRhsAssignment_6_0()); }
(rule__RuleDefinition__RhsAssignment_6_0)
{ after(grammarAccess.getRuleDefinitionAccess().getRhsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDefinition__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getGroup_6_1()); }
(rule__RuleDefinition__Group_6_1__0)*
{ after(grammarAccess.getRuleDefinitionAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDefinition__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group_6_1__0__Impl
	rule__RuleDefinition__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getPlusSignKeyword_6_1_0()); }

	'+' 

{ after(grammarAccess.getRuleDefinitionAccess().getPlusSignKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDefinition__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDefinition__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getRhsAssignment_6_1_1()); }
(rule__RuleDefinition__RhsAssignment_6_1_1)
{ after(grammarAccess.getRuleDefinitionAccess().getRhsAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleObject__Group__0__Impl
	rule__RuleObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleObjectAccess().getRuleObjectAction_0()); }
(

)
{ after(grammarAccess.getRuleObjectAccess().getRuleObjectAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleObject__Group__1__Impl
	rule__RuleObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleObjectAccess().getSubobjectsAssignment_1()); }
(rule__RuleObject__SubobjectsAssignment_1)
{ after(grammarAccess.getRuleObjectAccess().getSubobjectsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleObject__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleObjectAccess().getGroup_2()); }
(rule__RuleObject__Group_2__0)*
{ after(grammarAccess.getRuleObjectAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RuleObject__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleObject__Group_2__0__Impl
	rule__RuleObject__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleObject__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleObjectAccess().getTildeKeyword_2_0()); }

	'~' 

{ after(grammarAccess.getRuleObjectAccess().getTildeKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleObject__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleObject__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleObject__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleObjectAccess().getSubobjectsAssignment_2_1()); }
(rule__RuleObject__SubobjectsAssignment_2_1)
{ after(grammarAccess.getRuleObjectAccess().getSubobjectsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportAction_0()); }
(

)
{ after(grammarAccess.getImportAccess().getImportAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_1()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_2()); }
(rule__Import__ImportedNamespaceAssignment_2)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__MembersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMembersModelMemberParserRuleCall_1_0()); }
	ruleModelMember{ after(grammarAccess.getModelAccess().getMembersModelMemberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getTypeVariableTypeParserRuleCall_2_0()); }
	ruleVariableType{ after(grammarAccess.getVariableDefinitionAccess().getTypeVariableTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getVariableDefinitionAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__MembersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getMembersVariableDefinitionMemberParserRuleCall_5_0()); }
	ruleVariableDefinitionMember{ after(grammarAccess.getVariableDefinitionAccess().getMembersVariableDefinitionMemberParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getTypeVariableTypeParserRuleCall_2_0()); }
	ruleVariableType{ after(grammarAccess.getFunctionDefinitionAccess().getTypeVariableTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ParametersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getParametersFunctionParameterMemberParserRuleCall_5_0()); }
	ruleFunctionParameterMember{ after(grammarAccess.getFunctionDefinitionAccess().getParametersFunctionParameterMemberParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ParametersAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getParametersFunctionParameterMemberParserRuleCall_6_0()); }
	ruleFunctionParameterMember{ after(grammarAccess.getFunctionDefinitionAccess().getParametersFunctionParameterMemberParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ParametersAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getParametersFunctionParameterMemberParserRuleCall_7_1_0()); }
	ruleFunctionParameterMember{ after(grammarAccess.getFunctionDefinitionAccess().getParametersFunctionParameterMemberParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__MembersAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getMembersFunctionDefinitionMemberParserRuleCall_10_0()); }
	ruleFunctionDefinitionMember{ after(grammarAccess.getFunctionDefinitionAccess().getMembersFunctionDefinitionMemberParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameterMember__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParameterMemberAccess().getTypeIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionParameterMemberAccess().getTypeIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameterMember__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParameterMemberAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionParameterMemberAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameterMember__ScopeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParameterMemberAccess().getScopeParameterScopeParserRuleCall_3_0()); }
	ruleParameterScope{ after(grammarAccess.getFunctionParameterMemberAccess().getScopeParameterScopeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeVariableTypeParserRuleCall_0_1_0_0()); }
	ruleVariableType{ after(grammarAccess.getVariableDeclarationAccess().getTypeVariableTypeParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_0_1_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__CollectionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getCollectionCollectionIDParserRuleCall_1_0_0()); }
	ruleCollectionID{ after(grammarAccess.getVariableDeclarationAccess().getCollectionCollectionIDParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeVariableTypeParserRuleCall_1_2_0()); }
	ruleVariableType{ after(grammarAccess.getVariableDeclarationAccess().getTypeVariableTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_4_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__PrimitiveAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypeAccess().getPrimitiveAlternatives_1_0()); }
(rule__VariableType__PrimitiveAlternatives_1_0)
{ after(grammarAccess.getVariableTypeAccess().getPrimitiveAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAttribute__AttributeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAttributeAccess().getAttributeIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableAttributeAccess().getAttributeIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getVariableVariableAttributeParserRuleCall_1_0()); }
	ruleVariableAttribute{ after(grammarAccess.getVariableAssignmentAccess().getVariableVariableAttributeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getExpressionVariableExpressionParserRuleCall_3_0()); }
	ruleVariableExpression{ after(grammarAccess.getVariableAssignmentAccess().getExpressionVariableExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__MembersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableExpressionAccess().getMembersVariableAttributeParserRuleCall_1_0()); }
	ruleVariableAttribute{ after(grammarAccess.getVariableExpressionAccess().getMembersVariableAttributeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__MembersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableExpressionAccess().getMembersVariableAttributeParserRuleCall_2_1_0()); }
	ruleVariableAttribute{ after(grammarAccess.getVariableExpressionAccess().getMembersVariableAttributeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getRuleDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__LhsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getLhsRuleObjectParserRuleCall_4_0_0()); }
	ruleRuleObject{ after(grammarAccess.getRuleDefinitionAccess().getLhsRuleObjectParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__LhsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getLhsRuleObjectParserRuleCall_4_1_1_0()); }
	ruleRuleObject{ after(grammarAccess.getRuleDefinitionAccess().getLhsRuleObjectParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__RhsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getRhsRuleObjectParserRuleCall_6_0_0()); }
	ruleRuleObject{ after(grammarAccess.getRuleDefinitionAccess().getRhsRuleObjectParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__RhsAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefinitionAccess().getRhsRuleObjectParserRuleCall_6_1_1_0()); }
	ruleRuleObject{ after(grammarAccess.getRuleDefinitionAccess().getRhsRuleObjectParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleObject__SubobjectsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleObjectAccess().getSubobjectsIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuleObjectAccess().getSubobjectsIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleObject__SubobjectsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleObjectAccess().getSubobjectsIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getRuleObjectAccess().getSubobjectsIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_2_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


