/*
* generated by Xtext
*/
package roadblock.xtext.ibl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import roadblock.xtext.ibl.services.IblGrammarAccess;

public class IblParser extends AbstractContentAssistParser {
	
	@Inject
	private IblGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected roadblock.xtext.ibl.ui.contentassist.antlr.internal.InternalIblParser createParser() {
		roadblock.xtext.ibl.ui.contentassist.antlr.internal.InternalIblParser result = new roadblock.xtext.ibl.ui.contentassist.antlr.internal.InternalIblParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelMemberAccess().getAlternatives(), "rule__ModelMember__Alternatives");
					put(grammarAccess.getParameterScopeAccess().getAlternatives(), "rule__ParameterScope__Alternatives");
					put(grammarAccess.getFunctionDefinitionMemberAccess().getAlternatives(), "rule__FunctionDefinitionMember__Alternatives");
					put(grammarAccess.getVariableDeclarationAccess().getAlternatives_2(), "rule__VariableDeclaration__Alternatives_2");
					put(grammarAccess.getVariableTypeAccess().getPrimitiveAlternatives_1_0(), "rule__VariableType__PrimitiveAlternatives_1_0");
					put(grammarAccess.getVariableAttributeAccess().getNameAlternatives_1_0(), "rule__VariableAttribute__NameAlternatives_1_0");
					put(grammarAccess.getVariableAttributeAccess().getAlternatives_2_0(), "rule__VariableAttribute__Alternatives_2_0");
					put(grammarAccess.getVariableExpressionOperatorAccess().getAlternatives(), "rule__VariableExpressionOperator__Alternatives");
					put(grammarAccess.getPrimitiveVariableTypeAccess().getAlternatives(), "rule__PrimitiveVariableType__Alternatives");
					put(grammarAccess.getCollectionIDAccess().getAlternatives(), "rule__CollectionID__Alternatives");
					put(grammarAccess.getRuleDefinitionAccess().getAlternatives_5(), "rule__RuleDefinition__Alternatives_5");
					put(grammarAccess.getREALAccess().getAlternatives(), "rule__REAL__Alternatives");
					put(grammarAccess.getDecimalAccess().getAlternatives_0(), "rule__Decimal__Alternatives_0");
					put(grammarAccess.getDecimalExpAccess().getAlternatives_0(), "rule__DecimalExp__Alternatives_0");
					put(grammarAccess.getDecimalExpAccess().getAlternatives_3(), "rule__DecimalExp__Alternatives_3");
					put(grammarAccess.getDecimalExpAccess().getAlternatives_4(), "rule__DecimalExp__Alternatives_4");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getVariableDefinitionAccess().getGroup(), "rule__VariableDefinition__Group__0");
					put(grammarAccess.getFunctionDefinitionAccess().getGroup(), "rule__FunctionDefinition__Group__0");
					put(grammarAccess.getFunctionDefinitionAccess().getGroup_5(), "rule__FunctionDefinition__Group_5__0");
					put(grammarAccess.getFunctionDefinitionAccess().getGroup_5_1(), "rule__FunctionDefinition__Group_5_1__0");
					put(grammarAccess.getFunctionDefinitionAccess().getGroup_10(), "rule__FunctionDefinition__Group_10__0");
					put(grammarAccess.getFunctionDefinitionAccess().getGroup_10_2(), "rule__FunctionDefinition__Group_10_2__0");
					put(grammarAccess.getFunctionUseMemberAccess().getGroup(), "rule__FunctionUseMember__Group__0");
					put(grammarAccess.getFunctionParameterMemberAccess().getGroup(), "rule__FunctionParameterMember__Group__0");
					put(grammarAccess.getDeviceDefinitionAccess().getGroup(), "rule__DeviceDefinition__Group__0");
					put(grammarAccess.getDeviceDefinitionAccess().getGroup_6(), "rule__DeviceDefinition__Group_6__0");
					put(grammarAccess.getDeviceDefinitionAccess().getGroup_6_1(), "rule__DeviceDefinition__Group_6_1__0");
					put(grammarAccess.getDeviceDefinitionAccess().getGroup_9(), "rule__DeviceDefinition__Group_9__0");
					put(grammarAccess.getDeviceDefinitionAccess().getGroup_9_1(), "rule__DeviceDefinition__Group_9_1__0");
					put(grammarAccess.getDeviceDefinitionAccess().getGroup_12(), "rule__DeviceDefinition__Group_12__0");
					put(grammarAccess.getDeviceDefinitionAccess().getGroup_12_1(), "rule__DeviceDefinition__Group_12_1__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup(), "rule__VariableDeclaration__Group__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_2_0(), "rule__VariableDeclaration__Group_2_0__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_2_1(), "rule__VariableDeclaration__Group_2_1__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_3(), "rule__VariableDeclaration__Group_3__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_3_3(), "rule__VariableDeclaration__Group_3_3__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_3_3_1(), "rule__VariableDeclaration__Group_3_3_1__0");
					put(grammarAccess.getVariableTypeAccess().getGroup(), "rule__VariableType__Group__0");
					put(grammarAccess.getVariableQualifierAccess().getGroup(), "rule__VariableQualifier__Group__0");
					put(grammarAccess.getVariableAssignmentAccess().getGroup(), "rule__VariableAssignment__Group__0");
					put(grammarAccess.getVariableAttributeAccess().getGroup(), "rule__VariableAttribute__Group__0");
					put(grammarAccess.getVariableAttributeAccess().getGroup_2(), "rule__VariableAttribute__Group_2__0");
					put(grammarAccess.getVariableExpressionAccess().getGroup(), "rule__VariableExpression__Group__0");
					put(grammarAccess.getVariableExpressionAccess().getGroup_2(), "rule__VariableExpression__Group_2__0");
					put(grammarAccess.getRuleDefinitionAccess().getGroup(), "rule__RuleDefinition__Group__0");
					put(grammarAccess.getRuleDefinitionAccess().getGroup_4(), "rule__RuleDefinition__Group_4__0");
					put(grammarAccess.getRuleDefinitionAccess().getGroup_4_1(), "rule__RuleDefinition__Group_4_1__0");
					put(grammarAccess.getRuleDefinitionAccess().getGroup_6(), "rule__RuleDefinition__Group_6__0");
					put(grammarAccess.getRuleDefinitionAccess().getGroup_6_1(), "rule__RuleDefinition__Group_6_1__0");
					put(grammarAccess.getRuleObjectAccess().getGroup(), "rule__RuleObject__Group__0");
					put(grammarAccess.getRuleObjectAccess().getGroup_2(), "rule__RuleObject__Group_2__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getDecimalAccess().getGroup(), "rule__Decimal__Group__0");
					put(grammarAccess.getDecimalAccess().getGroup_2(), "rule__Decimal__Group_2__0");
					put(grammarAccess.getDecimalExpAccess().getGroup(), "rule__DecimalExp__Group__0");
					put(grammarAccess.getDecimalExpAccess().getGroup_2(), "rule__DecimalExp__Group_2__0");
					put(grammarAccess.getATGCDefinitionAccess().getGroup(), "rule__ATGCDefinition__Group__0");
					put(grammarAccess.getModelAccess().getMembersAssignment_1(), "rule__Model__MembersAssignment_1");
					put(grammarAccess.getVariableDefinitionAccess().getTypeAssignment_2(), "rule__VariableDefinition__TypeAssignment_2");
					put(grammarAccess.getVariableDefinitionAccess().getNameAssignment_3(), "rule__VariableDefinition__NameAssignment_3");
					put(grammarAccess.getVariableDefinitionAccess().getMembersAssignment_5(), "rule__VariableDefinition__MembersAssignment_5");
					put(grammarAccess.getFunctionDefinitionAccess().getTypeAssignment_2(), "rule__FunctionDefinition__TypeAssignment_2");
					put(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_3(), "rule__FunctionDefinition__NameAssignment_3");
					put(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_5_0(), "rule__FunctionDefinition__ParametersAssignment_5_0");
					put(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_5_1_1(), "rule__FunctionDefinition__ParametersAssignment_5_1_1");
					put(grammarAccess.getFunctionDefinitionAccess().getMembersAssignment_8(), "rule__FunctionDefinition__MembersAssignment_8");
					put(grammarAccess.getFunctionDefinitionAccess().getUsesAssignment_10_1(), "rule__FunctionDefinition__UsesAssignment_10_1");
					put(grammarAccess.getFunctionDefinitionAccess().getUsesAssignment_10_2_1(), "rule__FunctionDefinition__UsesAssignment_10_2_1");
					put(grammarAccess.getFunctionUseMemberAccess().getTypeAssignment_0(), "rule__FunctionUseMember__TypeAssignment_0");
					put(grammarAccess.getFunctionUseMemberAccess().getNameAssignment_1(), "rule__FunctionUseMember__NameAssignment_1");
					put(grammarAccess.getFunctionParameterMemberAccess().getTypeAssignment_0(), "rule__FunctionParameterMember__TypeAssignment_0");
					put(grammarAccess.getFunctionParameterMemberAccess().getNameAssignment_1(), "rule__FunctionParameterMember__NameAssignment_1");
					put(grammarAccess.getFunctionParameterMemberAccess().getScopeAssignment_3(), "rule__FunctionParameterMember__ScopeAssignment_3");
					put(grammarAccess.getDeviceDefinitionAccess().getNameAssignment_2(), "rule__DeviceDefinition__NameAssignment_2");
					put(grammarAccess.getDeviceDefinitionAccess().getPartsAssignment_6_0(), "rule__DeviceDefinition__PartsAssignment_6_0");
					put(grammarAccess.getDeviceDefinitionAccess().getPartsAssignment_6_1_1(), "rule__DeviceDefinition__PartsAssignment_6_1_1");
					put(grammarAccess.getDeviceDefinitionAccess().getParametersAssignment_9_0(), "rule__DeviceDefinition__ParametersAssignment_9_0");
					put(grammarAccess.getDeviceDefinitionAccess().getParametersAssignment_9_1_1(), "rule__DeviceDefinition__ParametersAssignment_9_1_1");
					put(grammarAccess.getDeviceDefinitionAccess().getMembersAssignment_12_0(), "rule__DeviceDefinition__MembersAssignment_12_0");
					put(grammarAccess.getDeviceDefinitionAccess().getMembersAssignment_12_1_1(), "rule__DeviceDefinition__MembersAssignment_12_1_1");
					put(grammarAccess.getVariableDeclarationAccess().getQualifierAssignment_1(), "rule__VariableDeclaration__QualifierAssignment_1");
					put(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_2_0_0(), "rule__VariableDeclaration__TypeAssignment_2_0_0");
					put(grammarAccess.getVariableDeclarationAccess().getNameAssignment_2_0_1(), "rule__VariableDeclaration__NameAssignment_2_0_1");
					put(grammarAccess.getVariableDeclarationAccess().getCollectionAssignment_2_1_0(), "rule__VariableDeclaration__CollectionAssignment_2_1_0");
					put(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_2_1_2(), "rule__VariableDeclaration__TypeAssignment_2_1_2");
					put(grammarAccess.getVariableDeclarationAccess().getNameAssignment_2_1_4(), "rule__VariableDeclaration__NameAssignment_2_1_4");
					put(grammarAccess.getVariableDeclarationAccess().getConstructorAssignment_3_1(), "rule__VariableDeclaration__ConstructorAssignment_3_1");
					put(grammarAccess.getVariableDeclarationAccess().getParametersAssignment_3_3_0(), "rule__VariableDeclaration__ParametersAssignment_3_3_0");
					put(grammarAccess.getVariableDeclarationAccess().getParametersAssignment_3_3_1_1(), "rule__VariableDeclaration__ParametersAssignment_3_3_1_1");
					put(grammarAccess.getVariableTypeAccess().getPrimitiveAssignment_1(), "rule__VariableType__PrimitiveAssignment_1");
					put(grammarAccess.getVariableAssignmentAccess().getVariableAssignment_1(), "rule__VariableAssignment__VariableAssignment_1");
					put(grammarAccess.getVariableAssignmentAccess().getExpressionAssignment_3(), "rule__VariableAssignment__ExpressionAssignment_3");
					put(grammarAccess.getVariableAttributeAccess().getNameAssignment_1(), "rule__VariableAttribute__NameAssignment_1");
					put(grammarAccess.getVariableAttributeAccess().getAttributeAssignment_2_1(), "rule__VariableAttribute__AttributeAssignment_2_1");
					put(grammarAccess.getVariableExpressionAccess().getMembersAssignment_1(), "rule__VariableExpression__MembersAssignment_1");
					put(grammarAccess.getVariableExpressionAccess().getMembersAssignment_2_1(), "rule__VariableExpression__MembersAssignment_2_1");
					put(grammarAccess.getRuleDefinitionAccess().getNameAssignment_2(), "rule__RuleDefinition__NameAssignment_2");
					put(grammarAccess.getRuleDefinitionAccess().getLhsAssignment_4_0(), "rule__RuleDefinition__LhsAssignment_4_0");
					put(grammarAccess.getRuleDefinitionAccess().getLhsAssignment_4_1_1(), "rule__RuleDefinition__LhsAssignment_4_1_1");
					put(grammarAccess.getRuleDefinitionAccess().getRhsAssignment_6_0(), "rule__RuleDefinition__RhsAssignment_6_0");
					put(grammarAccess.getRuleDefinitionAccess().getRhsAssignment_6_1_1(), "rule__RuleDefinition__RhsAssignment_6_1_1");
					put(grammarAccess.getRuleObjectAccess().getSubobjectsAssignment_1(), "rule__RuleObject__SubobjectsAssignment_1");
					put(grammarAccess.getRuleObjectAccess().getSubobjectsAssignment_2_1(), "rule__RuleObject__SubobjectsAssignment_2_1");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_2(), "rule__Import__ImportedNamespaceAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			roadblock.xtext.ibl.ui.contentassist.antlr.internal.InternalIblParser typedParser = (roadblock.xtext.ibl.ui.contentassist.antlr.internal.InternalIblParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public IblGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(IblGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
