/* XPECT_SETUP roadblock.xtext.xpect.ibl.tests.resourceDescription.IBLResourceDescription END_SETUP */

/*
these names are stored in the Xtext Index
XPECT exportedObjects ---
 ibl::FunctionDefinition: anotherProcess
 ibl::FunctionDefinition: dummyProcess
 ibl::FunctionParameterMember: anotherProcess.signal
 ibl::FunctionParameterMember: dummyProcess.someGene
 ibl::FunctionParameterMember: dummyProcess.somePromoter
 ibl::FunctionParameterMember: dummyProcess.someProtein
 ibl::ParameterAssignment: anotherProcess.myDummyProcess.someGene
 ibl::ParameterAssignment: anotherProcess.myDummyProcess.somePromoter
 ibl::ParameterAssignment: anotherProcess.myDummyProcess.someProtein
 ibl::RuleDefinition: anotherProcess.rule03
 ibl::RuleDefinition: dummyProcess.rule01
 ibl::RuleDefinition: dummyProcess.rule02
 ibl::VariableDefinitionBuiltIn: anotherProcess.a
 ibl::VariableDefinitionBuiltIn: anotherProcess.b
 ibl::VariableDefinitionBuiltIn: anotherProcess.c
 ibl::VariableDefinitionBuiltIn: anotherProcess.myDummyProcess
 ibl::VariableDefinitionBuiltIn: dummyProcess.mrna
 ---
*/

/*
these names are stored in the Xtext Index
XPECT importedNames ---
 ---
*/

/*
these references are stored in the Xtext Index
XPECT referenceDescriptions ---
---
*/ 
define dummyProcess typeof PROCESS(
	PROMOTER somePromoter:input,
	GENE someGene:input,
	PROTEIN someProtein:output
){
	RNA mrna
	
	RULE rule01: somePromoter + mrna <-> somePromoter~mrna
	RULE rule02: someGene + somePromoter~mrna -> someProtein
}

define anotherProcess typeof PROCESS(
	MOLECULE signal: output
){
	MOLECULE a
	MOLECULE b
	MOLECULE c
	
	PROCESS myDummyProcess = new dummyProcess(somePromoter = a, someGene = b, someProtein = c)
	RULE rule03: someProtein -> signal
	
}