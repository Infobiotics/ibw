//////////////////////////////
// library of basic objects //
//////////////////////////////

// jamie twycross, 2013

///////////////
// processes //
///////////////

define ConstitutiveProteinExpression typeof PROCESS (
	PROMOTER promoter:required,
	GENE gene1:required,
	PROTEIN protein1:returned,
	HASH rates:optional
) 
{
	RNA mrna1
	
	RULE promoterBinding : promoter + rnaP <-> promoter~rnaP	
	promoterBinding.forwardRate = promoter.bindingRate | rates.bindingRate // get binding rate from promoter's properties if available, or from constant RATE.
	promoterBinding.reverseRate = promoter.unbindingRate | rates.unbindingRate

	RULE transcription : promoter~rnaP -> promoter~rnaP + mrna1
	transcription.forwardRate = rates.transcriptionRate

	RULE mrnaDegradation : mrna1 ->
	mrnaDegradation.forwardRate = rates.rnaDegratationRate

	RULE translationInitiation : mrna1 + ribosome <-> mrna1~ribosome // mrna binds to ribosome
	translationInitiation.forwardRate = rates.ribosomeBinding
	translationInitiation.reverseRate = rates.ribosomeUnbinding

	RULE translation : mrna1~ribosome -> mrna1~ribosome + protein1
	translation.forwardRate = rates.translationRate

//	RULE proteinDegradation : protein1 ->
//	R6.rate = protein1.degradationRate | rates.proteinDegradationRate
} USES RIBOSOME ribosome, RNA rnaP

define RegulatedProteinExpression typeof ConstitutiveProcessExpression (
	MOLECULE signal:required	
)
{
	RULE signalBinding : signal + promoter <-> signal~promoter
	signalBinding.forwardRate = promoter.bindingRate | rate.bindingRate
	signalBinding.reverseRate = promoter.unbindingRate | rate.unbindingRate

	RULE promoterBinding : signal~promoter + rnaP <-> promoter~rnaP	
//1	promoterBinding.forwardRate = promoter.bindingRate | rates.bindingRate // get binding rate from promoter's properties if available, or from constant RATE.
//2	promoterBinding.reverseRate = promoter.unbindingRate | rates.unbindingRate

}

define RegulatedProteinExpression typeof PROCESS (
	MOLECULE regulator:required,
	PROMOTER promoter:required,
	GENE gene:required,
	PROTEIN protein:returned,
	RATE rates:optional
)
{
	RULE R1 : regulator + promoter <-> regulator~promoter
	R1.rate = promoter.bindingRate | rate.bindingRate

	RULE R2 : regulator~promoter -> regulator~promoter + rna~gene~RNAP
	R2.rate = promoter.transcriptionRate

	RULE R3 : rna~gene~RNAP -> rna~gene
	R3.rate = rate.transcriptionRate

	RULE R4 : rna~gene ->
	R4.rate = rates.degradationRate | rates.RNADegradationRate

	RULE R5 : rna~gene -> rna~gene + gene~ribosome
	R5.rate = rate.translationRate1

	RULE R6 : gene~ribosome -> protein
	R6.rate = rate.translationRate2

	RULE R7 : protein ->
	R7.rate = protein.degradationRate | rates.proteinDegradationRate
} USES RIBOSOME ribosome, RNA rnaP
