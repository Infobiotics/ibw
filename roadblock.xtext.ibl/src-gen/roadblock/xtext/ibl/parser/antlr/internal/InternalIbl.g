/*
* generated by Xtext
*/
grammar InternalIbl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package roadblock.xtext.ibl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package roadblock.xtext.ibl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import roadblock.xtext.ibl.services.IblGrammarAccess;

}

@parser::members {

 	private IblGrammarAccess grammarAccess;
 	
    public InternalIblParser(TokenStream input, IblGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected IblGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModelAccess().getModelAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getMembersModelMemberParserRuleCall_1_0()); 
	    }
		lv_members_1_0=ruleModelMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_1_0, 
        		"ModelMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleModelMember
entryRuleModelMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelMemberRule()); }
	 iv_ruleModelMember=ruleModelMember 
	 { $current=$iv_ruleModelMember.current; } 
	 EOF 
;

// Rule ModelMember
ruleModelMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getModelMemberAccess().getImportStatementParserRuleCall_0()); 
    }
    this_ImportStatement_0=ruleImportStatement
    { 
        $current = $this_ImportStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getModelMemberAccess().getFunctionDefinitionParserRuleCall_1()); 
    }
    this_FunctionDefinition_1=ruleFunctionDefinition
    { 
        $current = $this_FunctionDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleImportStatement
entryRuleImportStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportStatementRule()); }
	 iv_ruleImportStatement=ruleImportStatement 
	 { $current=$iv_ruleImportStatement.current; } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getImportStatementAccess().getImportAction_0(),
            $current);
    }
)	otherlv_1='import' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImportStatementAccess().getImportKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportStatementAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_2_0()); 
	    }
		lv_importedNamespace_2_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportStatementRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_2_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionDefinitionRule()); }
	 iv_ruleFunctionDefinition=ruleFunctionDefinition 
	 { $current=$iv_ruleFunctionDefinition.current; } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0(),
            $current);
    }
)	otherlv_1='define' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunctionDefinitionAccess().getDefineKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getNameVariableNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='typeof' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunctionDefinitionAccess().getTypeofKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getFunctionBodyFunctionBodyTypeParserRuleCall_4_0()); 
	    }
		lv_functionBody_4_0=ruleFunctionBodyType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"functionBody",
        		lv_functionBody_4_0, 
        		"FunctionBodyType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='USES' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFunctionDefinitionAccess().getUSESKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getUsesFunctionUseMemberParserRuleCall_5_1_0()); 
	    }
		lv_uses_6_0=ruleFunctionUseMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		add(
       			$current, 
       			"uses",
        		lv_uses_6_0, 
        		"FunctionUseMember");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getUsesFunctionUseMemberParserRuleCall_5_2_1_0()); 
	    }
		lv_uses_8_0=ruleFunctionUseMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		add(
       			$current, 
       			"uses",
        		lv_uses_8_0, 
        		"FunctionUseMember");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleFunctionBodyType
entryRuleFunctionBodyType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionBodyTypeRule()); }
	 iv_ruleFunctionBodyType=ruleFunctionBodyType 
	 { $current=$iv_ruleFunctionBodyType.current; } 
	 EOF 
;

// Rule FunctionBodyType
ruleFunctionBodyType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFunctionBodyTypeAccess().getProcessBodyParserRuleCall_0()); 
    }
    this_ProcessBody_0=ruleProcessBody
    { 
        $current = $this_ProcessBody_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyTypeAccess().getSystemBodyParserRuleCall_1()); 
    }
    this_SystemBody_1=ruleSystemBody
    { 
        $current = $this_SystemBody_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyTypeAccess().getPlasmidBodyParserRuleCall_2()); 
    }
    this_PlasmidBody_2=rulePlasmidBody
    { 
        $current = $this_PlasmidBody_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyTypeAccess().getChromosomeBodyParserRuleCall_3()); 
    }
    this_ChromosomeBody_3=ruleChromosomeBody
    { 
        $current = $this_ChromosomeBody_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyTypeAccess().getCellBodyParserRuleCall_4()); 
    }
    this_CellBody_4=ruleCellBody
    { 
        $current = $this_CellBody_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyTypeAccess().getRegionBodyParserRuleCall_5()); 
    }
    this_RegionBody_5=ruleRegionBody
    { 
        $current = $this_RegionBody_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyTypeAccess().getCustomFunctionBodyParserRuleCall_6()); 
    }
    this_CustomFunctionBody_6=ruleCustomFunctionBody
    { 
        $current = $this_CustomFunctionBody_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleProcessBody
entryRuleProcessBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessBodyRule()); }
	 iv_ruleProcessBody=ruleProcessBody 
	 { $current=$iv_ruleProcessBody.current; } 
	 EOF 
;

// Rule ProcessBody
ruleProcessBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProcessBodyAccess().getProcessBodyAction_0(),
            $current);
    }
)	otherlv_1='PROCESS' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProcessBodyAccess().getPROCESSKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProcessBodyAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcessBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_0_0()); 
	    }
		lv_parameters_3_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcessBodyAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_1_1_0()); 
	    }
		lv_parameters_5_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProcessBodyAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProcessBodyAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessBodyAccess().getMembersFunctionBodyMemberParserRuleCall_6_0()); 
	    }
		lv_members_8_0=ruleFunctionBodyMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessBodyRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_0, 
        		"FunctionBodyMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getProcessBodyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSystemBody
entryRuleSystemBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSystemBodyRule()); }
	 iv_ruleSystemBody=ruleSystemBody 
	 { $current=$iv_ruleSystemBody.current; } 
	 EOF 
;

// Rule SystemBody
ruleSystemBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSystemBodyAccess().getSystemBodyAction_0(),
            $current);
    }
)	otherlv_1='SYSTEM' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSystemBodyAccess().getSYSTEMKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSystemBodyAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSystemBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_0_0()); 
	    }
		lv_parameters_3_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSystemBodyAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_1_1_0()); 
	    }
		lv_parameters_5_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSystemBodyAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSystemBodyAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemBodyAccess().getMembersFunctionBodyMemberParserRuleCall_6_0()); 
	    }
		lv_members_8_0=ruleFunctionBodyMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemBodyRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_0, 
        		"FunctionBodyMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSystemBodyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRulePlasmidBody
entryRulePlasmidBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlasmidBodyRule()); }
	 iv_rulePlasmidBody=rulePlasmidBody 
	 { $current=$iv_rulePlasmidBody.current; } 
	 EOF 
;

// Rule PlasmidBody
rulePlasmidBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPlasmidBodyAccess().getPlasmidBodyAction_0(),
            $current);
    }
)	otherlv_1='PLASMID' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPlasmidBodyAccess().getPLASMIDKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPlasmidBodyAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPlasmidBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_0_0()); 
	    }
		lv_parameters_3_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlasmidBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPlasmidBodyAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPlasmidBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_1_1_0()); 
	    }
		lv_parameters_5_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlasmidBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPlasmidBodyAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPlasmidBodyAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPlasmidBodyAccess().getMembersFunctionBodyMemberParserRuleCall_6_0()); 
	    }
		lv_members_8_0=ruleFunctionBodyMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlasmidBodyRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_0, 
        		"FunctionBodyMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPlasmidBodyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleChromosomeBody
entryRuleChromosomeBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChromosomeBodyRule()); }
	 iv_ruleChromosomeBody=ruleChromosomeBody 
	 { $current=$iv_ruleChromosomeBody.current; } 
	 EOF 
;

// Rule ChromosomeBody
ruleChromosomeBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getChromosomeBodyAccess().getChromosomeBodyAction_0(),
            $current);
    }
)	otherlv_1='CHROMOSOME' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getChromosomeBodyAccess().getCHROMOSOMEKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getChromosomeBodyAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getChromosomeBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_0_0()); 
	    }
		lv_parameters_3_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChromosomeBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getChromosomeBodyAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChromosomeBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_1_1_0()); 
	    }
		lv_parameters_5_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChromosomeBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getChromosomeBodyAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getChromosomeBodyAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChromosomeBodyAccess().getMembersFunctionBodyMemberParserRuleCall_6_0()); 
	    }
		lv_members_8_0=ruleFunctionBodyMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChromosomeBodyRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_0, 
        		"FunctionBodyMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getChromosomeBodyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleCellBody
entryRuleCellBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCellBodyRule()); }
	 iv_ruleCellBody=ruleCellBody 
	 { $current=$iv_ruleCellBody.current; } 
	 EOF 
;

// Rule CellBody
ruleCellBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCellBodyAccess().getCellBodyAction_0(),
            $current);
    }
)	otherlv_1='CELL' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCellBodyAccess().getCELLKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCellBodyAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCellBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_0_0()); 
	    }
		lv_parameters_3_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCellBodyAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCellBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_1_1_0()); 
	    }
		lv_parameters_5_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCellBodyAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCellBodyAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCellBodyAccess().getMembersFunctionBodyMemberParserRuleCall_6_0()); 
	    }
		lv_members_8_0=ruleFunctionBodyMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellBodyRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_0, 
        		"FunctionBodyMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCellBodyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleRegionBody
entryRuleRegionBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegionBodyRule()); }
	 iv_ruleRegionBody=ruleRegionBody 
	 { $current=$iv_ruleRegionBody.current; } 
	 EOF 
;

// Rule RegionBody
ruleRegionBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRegionBodyAccess().getRegionBodyAction_0(),
            $current);
    }
)	otherlv_1='REGION' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRegionBodyAccess().getREGIONKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRegionBodyAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRegionBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_0_0()); 
	    }
		lv_parameters_3_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegionBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRegionBodyAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegionBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_1_1_0()); 
	    }
		lv_parameters_5_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegionBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRegionBodyAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRegionBodyAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegionBodyAccess().getMembersFunctionBodyMemberParserRuleCall_6_0()); 
	    }
		lv_members_8_0=ruleFunctionBodyMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegionBodyRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_0, 
        		"FunctionBodyMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRegionBodyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleCustomFunctionBody
entryRuleCustomFunctionBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomFunctionBodyRule()); }
	 iv_ruleCustomFunctionBody=ruleCustomFunctionBody 
	 { $current=$iv_ruleCustomFunctionBody.current; } 
	 EOF 
;

// Rule CustomFunctionBody
ruleCustomFunctionBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCustomFunctionBodyAccess().getCustomFunctionBodyAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomFunctionBodyAccess().getFunctionTypeVariableNameParserRuleCall_1_0()); 
	    }
		lv_functionType_1_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomFunctionBodyRule());
	        }
       		set(
       			$current, 
       			"functionType",
        		lv_functionType_1_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomFunctionBodyAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCustomFunctionBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_0_0()); 
	    }
		lv_parameters_3_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomFunctionBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCustomFunctionBodyAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomFunctionBodyAccess().getParametersFunctionParameterMemberParserRuleCall_3_1_1_0()); 
	    }
		lv_parameters_5_0=ruleFunctionParameterMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomFunctionBodyRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"FunctionParameterMember");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCustomFunctionBodyAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCustomFunctionBodyAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomFunctionBodyAccess().getMembersFunctionBodyMemberParserRuleCall_6_0()); 
	    }
		lv_members_8_0=ruleFunctionBodyMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomFunctionBodyRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_0, 
        		"FunctionBodyMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCustomFunctionBodyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleFunctionBodyMember
entryRuleFunctionBodyMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionBodyMemberRule()); }
	 iv_ruleFunctionBodyMember=ruleFunctionBodyMember 
	 { $current=$iv_ruleFunctionBodyMember.current; } 
	 EOF 
;

// Rule FunctionBodyMember
ruleFunctionBodyMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getATGCDefinitionParserRuleCall_0()); 
    }
    this_ATGCDefinition_0=ruleATGCDefinition
    { 
        $current = $this_ATGCDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getCellInstantiationParserRuleCall_1()); 
    }
    this_CellInstantiation_1=ruleCellInstantiation
    { 
        $current = $this_CellInstantiation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getChromosomeInstantiationParserRuleCall_2()); 
    }
    this_ChromosomeInstantiation_2=ruleChromosomeInstantiation
    { 
        $current = $this_ChromosomeInstantiation_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getDeviceDefinitionParserRuleCall_3()); 
    }
    this_DeviceDefinition_3=ruleDeviceDefinition
    { 
        $current = $this_DeviceDefinition_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getPlasmidInstantiationParserRuleCall_4()); 
    }
    this_PlasmidInstantiation_4=rulePlasmidInstantiation
    { 
        $current = $this_PlasmidInstantiation_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getProcessInstantiationParserRuleCall_5()); 
    }
    this_ProcessInstantiation_5=ruleProcessInstantiation
    { 
        $current = $this_ProcessInstantiation_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getPropertyDefinitionParserRuleCall_6()); 
    }
    this_PropertyDefinition_6=rulePropertyDefinition
    { 
        $current = $this_PropertyDefinition_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getRuleDefinitionParserRuleCall_7()); 
    }
    this_RuleDefinition_7=ruleRuleDefinition
    { 
        $current = $this_RuleDefinition_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getSystemInstantiationParserRuleCall_8()); 
    }
    this_SystemInstantiation_8=ruleSystemInstantiation
    { 
        $current = $this_SystemInstantiation_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getVariableAssignmentParserRuleCall_9()); 
    }
    this_VariableAssignment_9=ruleVariableAssignment
    { 
        $current = $this_VariableAssignment_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionBodyMemberAccess().getVariableDefinitionParserRuleCall_10()); 
    }
    this_VariableDefinition_10=ruleVariableDefinition
    { 
        $current = $this_VariableDefinition_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFunctionParameterMember
entryRuleFunctionParameterMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionParameterMemberRule()); }
	 iv_ruleFunctionParameterMember=ruleFunctionParameterMember 
	 { $current=$iv_ruleFunctionParameterMember.current; } 
	 EOF 
;

// Rule FunctionParameterMember
ruleFunctionParameterMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionParameterMemberAccess().getTypeVariableTypeParserRuleCall_0_0_0()); 
	    }
		lv_type_0_0=ruleVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionParameterMemberRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"VariableType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionParameterMemberAccess().getCollectionCollectionIDParserRuleCall_0_1_0_0()); 
	    }
		lv_collection_1_0=ruleCollectionID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionParameterMemberRule());
	        }
       		set(
       			$current, 
       			"collection",
        		lv_collection_1_0, 
        		"CollectionID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionParameterMemberAccess().getLessThanSignKeyword_0_1_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionParameterMemberAccess().getTypeVariableTypeParserRuleCall_0_1_2_0_0()); 
	    }
		lv_type_3_1=ruleVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionParameterMemberRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_1, 
        		"VariableType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFunctionParameterMemberAccess().getTypeVariableNameParserRuleCall_0_1_2_0_1()); 
	    }
		lv_type_3_2=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionParameterMemberRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_2, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFunctionParameterMemberAccess().getGreaterThanSignKeyword_0_1_3());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionParameterMemberAccess().getNameVariableNameParserRuleCall_1_0()); 
	    }
		lv_name_5_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionParameterMemberRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFunctionParameterMemberAccess().getColonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionParameterMemberAccess().getScopeFunctionParameterScopeParserRuleCall_2_1_0()); 
	    }
		lv_scope_7_0=ruleFunctionParameterScope		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionParameterMemberRule());
	        }
       		set(
       			$current, 
       			"scope",
        		lv_scope_7_0, 
        		"FunctionParameterScope");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleFunctionParameterScope
entryRuleFunctionParameterScope returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionParameterScopeRule()); } 
	 iv_ruleFunctionParameterScope=ruleFunctionParameterScope 
	 { $current=$iv_ruleFunctionParameterScope.current.getText(); }  
	 EOF 
;

// Rule FunctionParameterScope
ruleFunctionParameterScope returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='input' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFunctionParameterScopeAccess().getInputKeyword_0()); 
    }

    |
	kw='output' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFunctionParameterScopeAccess().getOutputKeyword_1()); 
    }

    |
	kw='optional' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFunctionParameterScopeAccess().getOptionalKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleFunctionUseMember
entryRuleFunctionUseMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionUseMemberRule()); }
	 iv_ruleFunctionUseMember=ruleFunctionUseMember 
	 { $current=$iv_ruleFunctionUseMember.current; } 
	 EOF 
;

// Rule FunctionUseMember
ruleFunctionUseMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionUseMemberAccess().getTypeVariableTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionUseMemberRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"VariableType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionUseMemberAccess().getNameVariableNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionUseMemberRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDeviceDefinition
entryRuleDeviceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeviceDefinitionRule()); }
	 iv_ruleDeviceDefinition=ruleDeviceDefinition 
	 { $current=$iv_ruleDeviceDefinition.current; } 
	 EOF 
;

// Rule DeviceDefinition
ruleDeviceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeviceDefinitionAccess().getDeviceDefinitionAction_0(),
            $current);
    }
)	otherlv_1='DEVICE' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeviceDefinitionAccess().getDEVICEKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceDefinitionAccess().getNameVariableNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeviceDefinitionAccess().getEqualsSignKeyword_3());
    }
	otherlv_4='new' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeviceDefinitionAccess().getNewKeyword_4());
    }
	otherlv_5='DEVICE' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDeviceDefinitionAccess().getDEVICEKeyword_5());
    }
	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDeviceDefinitionAccess().getLeftParenthesisKeyword_6());
    }
	otherlv_7='parts' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDeviceDefinitionAccess().getPartsKeyword_7());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDeviceDefinitionAccess().getEqualsSignKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceDefinitionAccess().getPartsListParserRuleCall_9_0()); 
	    }
		lv_parts_9_0=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceDefinitionRule());
	        }
       		set(
       			$current, 
       			"parts",
        		lv_parts_9_0, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDeviceDefinitionAccess().getRightParenthesisKeyword_10());
    }
	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDeviceDefinitionAccess().getLeftParenthesisKeyword_11());
    }
(	otherlv_12='input' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDeviceDefinitionAccess().getInputKeyword_12_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDeviceDefinitionAccess().getEqualsSignKeyword_12_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceDefinitionAccess().getInputListParserRuleCall_12_2_0()); 
	    }
		lv_input_14_0=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceDefinitionRule());
	        }
       		set(
       			$current, 
       			"input",
        		lv_input_14_0, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDeviceDefinitionAccess().getCommaKeyword_13_0());
    }
	otherlv_16='output' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDeviceDefinitionAccess().getOutputKeyword_13_1());
    }
	otherlv_17='=' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getDeviceDefinitionAccess().getEqualsSignKeyword_13_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceDefinitionAccess().getOutputputListParserRuleCall_13_3_0()); 
	    }
		lv_outputput_18_0=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceDefinitionRule());
	        }
       		set(
       			$current, 
       			"outputput",
        		lv_outputput_18_0, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_19=')' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDeviceDefinitionAccess().getRightParenthesisKeyword_14());
    }
	otherlv_20='{' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getDeviceDefinitionAccess().getLeftCurlyBracketKeyword_15());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceDefinitionAccess().getMembersDeviceMembersParserRuleCall_16_0()); 
	    }
		lv_members_21_0=ruleDeviceMembers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceDefinitionRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_21_0, 
        		"DeviceMembers");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getDeviceDefinitionAccess().getRightCurlyBracketKeyword_17());
    }
)
;





// Entry rule entryRuleDeviceMembers
entryRuleDeviceMembers returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeviceMembersRule()); }
	 iv_ruleDeviceMembers=ruleDeviceMembers 
	 { $current=$iv_ruleDeviceMembers.current; } 
	 EOF 
;

// Rule DeviceMembers
ruleDeviceMembers returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDeviceMembersAccess().getVariableDefinitionParserRuleCall_0()); 
    }
    this_VariableDefinition_0=ruleVariableDefinition
    { 
        $current = $this_VariableDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeviceMembersAccess().getPropertyDefinitionParserRuleCall_1()); 
    }
    this_PropertyDefinition_1=rulePropertyDefinition
    { 
        $current = $this_PropertyDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeviceMembersAccess().getATGCDefinitionParserRuleCall_2()); 
    }
    this_ATGCDefinition_2=ruleATGCDefinition
    { 
        $current = $this_ATGCDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeviceMembersAccess().getProcessInstantiationParserRuleCall_3()); 
    }
    this_ProcessInstantiation_3=ruleProcessInstantiation
    { 
        $current = $this_ProcessInstantiation_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleProcessInstantiation
entryRuleProcessInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessInstantiationRule()); }
	 iv_ruleProcessInstantiation=ruleProcessInstantiation 
	 { $current=$iv_ruleProcessInstantiation.current; } 
	 EOF 
;

// Rule ProcessInstantiation
ruleProcessInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProcessInstantiationAccess().getProcessInstantiationAction_0(),
            $current);
    }
)	otherlv_1='PROCESS' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProcessInstantiationAccess().getPROCESSKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessInstantiationAccess().getNameVariableNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessInstantiationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProcessInstantiationAccess().getEqualsSignKeyword_3_0());
    }
	otherlv_4='new' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcessInstantiationAccess().getNewKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessInstantiationAccess().getConstructorVariableNameParserRuleCall_3_2_0()); 
	    }
		lv_constructor_5_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessInstantiationRule());
	        }
       		set(
       			$current, 
       			"constructor",
        		lv_constructor_5_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProcessInstantiationAccess().getLeftParenthesisKeyword_3_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcessInstantiationAccess().getParametersParameterAssignmentParserRuleCall_3_4_0_0()); 
	    }
		lv_parameters_7_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessInstantiationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_7_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getProcessInstantiationAccess().getCommaKeyword_3_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessInstantiationAccess().getParametersParameterAssignmentParserRuleCall_3_4_1_1_0()); 
	    }
		lv_parameters_9_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessInstantiationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_9_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getProcessInstantiationAccess().getRightParenthesisKeyword_3_5());
    }
)?)
;





// Entry rule entryRuleSystemInstantiation
entryRuleSystemInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSystemInstantiationRule()); }
	 iv_ruleSystemInstantiation=ruleSystemInstantiation 
	 { $current=$iv_ruleSystemInstantiation.current; } 
	 EOF 
;

// Rule SystemInstantiation
ruleSystemInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSystemInstantiationAccess().getSystemInstantiationAction_0(),
            $current);
    }
)	otherlv_1='SYSTEM' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSystemInstantiationAccess().getSYSTEMKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemInstantiationAccess().getNameVariableNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemInstantiationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSystemInstantiationAccess().getEqualsSignKeyword_3_0());
    }
	otherlv_4='new' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSystemInstantiationAccess().getNewKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemInstantiationAccess().getConstructorVariableNameParserRuleCall_3_2_0()); 
	    }
		lv_constructor_5_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemInstantiationRule());
	        }
       		set(
       			$current, 
       			"constructor",
        		lv_constructor_5_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSystemInstantiationAccess().getLeftParenthesisKeyword_3_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSystemInstantiationAccess().getParametersParameterAssignmentParserRuleCall_3_4_0_0()); 
	    }
		lv_parameters_7_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemInstantiationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_7_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSystemInstantiationAccess().getCommaKeyword_3_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemInstantiationAccess().getParametersParameterAssignmentParserRuleCall_3_4_1_1_0()); 
	    }
		lv_parameters_9_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemInstantiationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_9_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSystemInstantiationAccess().getRightParenthesisKeyword_3_5());
    }
)?)
;





// Entry rule entryRulePlasmidInstantiation
entryRulePlasmidInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlasmidInstantiationRule()); }
	 iv_rulePlasmidInstantiation=rulePlasmidInstantiation 
	 { $current=$iv_rulePlasmidInstantiation.current; } 
	 EOF 
;

// Rule PlasmidInstantiation
rulePlasmidInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPlasmidInstantiationAccess().getPlasmidInstantiationAction_0(),
            $current);
    }
)	otherlv_1='PLASMID' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPlasmidInstantiationAccess().getPLASMIDKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPlasmidInstantiationAccess().getNameVariableNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlasmidInstantiationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPlasmidInstantiationAccess().getEqualsSignKeyword_3_0());
    }
	otherlv_4='new' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPlasmidInstantiationAccess().getNewKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPlasmidInstantiationAccess().getConstructorVariableNameParserRuleCall_3_2_0()); 
	    }
		lv_constructor_5_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlasmidInstantiationRule());
	        }
       		set(
       			$current, 
       			"constructor",
        		lv_constructor_5_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPlasmidInstantiationAccess().getLeftParenthesisKeyword_3_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPlasmidInstantiationAccess().getParametersParameterAssignmentParserRuleCall_3_4_0_0()); 
	    }
		lv_parameters_7_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlasmidInstantiationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_7_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPlasmidInstantiationAccess().getCommaKeyword_3_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPlasmidInstantiationAccess().getParametersParameterAssignmentParserRuleCall_3_4_1_1_0()); 
	    }
		lv_parameters_9_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlasmidInstantiationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_9_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPlasmidInstantiationAccess().getRightParenthesisKeyword_3_5());
    }
)?)
;





// Entry rule entryRuleChromosomeInstantiation
entryRuleChromosomeInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChromosomeInstantiationRule()); }
	 iv_ruleChromosomeInstantiation=ruleChromosomeInstantiation 
	 { $current=$iv_ruleChromosomeInstantiation.current; } 
	 EOF 
;

// Rule ChromosomeInstantiation
ruleChromosomeInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getChromosomeInstantiationAccess().getChromosomeInstantiationAction_0(),
            $current);
    }
)	otherlv_1='CHROMOSOME' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getChromosomeInstantiationAccess().getCHROMOSOMEKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChromosomeInstantiationAccess().getNameVariableNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChromosomeInstantiationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getChromosomeInstantiationAccess().getEqualsSignKeyword_3_0());
    }
	otherlv_4='new' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getChromosomeInstantiationAccess().getNewKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChromosomeInstantiationAccess().getConstructorVariableNameParserRuleCall_3_2_0()); 
	    }
		lv_constructor_5_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChromosomeInstantiationRule());
	        }
       		set(
       			$current, 
       			"constructor",
        		lv_constructor_5_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getChromosomeInstantiationAccess().getLeftParenthesisKeyword_3_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getChromosomeInstantiationAccess().getParametersParameterAssignmentParserRuleCall_3_4_0_0()); 
	    }
		lv_parameters_7_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChromosomeInstantiationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_7_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getChromosomeInstantiationAccess().getCommaKeyword_3_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChromosomeInstantiationAccess().getParametersParameterAssignmentParserRuleCall_3_4_1_1_0()); 
	    }
		lv_parameters_9_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChromosomeInstantiationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_9_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getChromosomeInstantiationAccess().getRightParenthesisKeyword_3_5());
    }
)?)
;





// Entry rule entryRuleCellInstantiation
entryRuleCellInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCellInstantiationRule()); }
	 iv_ruleCellInstantiation=ruleCellInstantiation 
	 { $current=$iv_ruleCellInstantiation.current; } 
	 EOF 
;

// Rule CellInstantiation
ruleCellInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCellInstantiationAccess().getCellInstantiationAction_0(),
            $current);
    }
)	otherlv_1='CELL' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCellInstantiationAccess().getCELLKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCellInstantiationAccess().getNameVariableNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellInstantiationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCellInstantiationAccess().getEqualsSignKeyword_3_0());
    }
	otherlv_4='new' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCellInstantiationAccess().getNewKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCellInstantiationAccess().getConstructorVariableNameParserRuleCall_3_2_0()); 
	    }
		lv_constructor_5_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellInstantiationRule());
	        }
       		set(
       			$current, 
       			"constructor",
        		lv_constructor_5_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCellInstantiationAccess().getLeftParenthesisKeyword_3_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCellInstantiationAccess().getParametersParameterAssignmentParserRuleCall_3_4_0_0()); 
	    }
		lv_parameters_7_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellInstantiationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_7_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCellInstantiationAccess().getCommaKeyword_3_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCellInstantiationAccess().getParametersParameterAssignmentParserRuleCall_3_4_1_1_0()); 
	    }
		lv_parameters_9_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellInstantiationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_9_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCellInstantiationAccess().getRightParenthesisKeyword_3_5());
    }
)?)
;





// Entry rule entryRuleVariableName
entryRuleVariableName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableNameRule()); } 
	 iv_ruleVariableName=ruleVariableName 
	 { $current=$iv_ruleVariableName.current.getText(); }  
	 EOF 
;

// Rule VariableName
ruleVariableName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getVariableNameAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleVariableType
entryRuleVariableType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableTypeRule()); } 
	 iv_ruleVariableType=ruleVariableType 
	 { $current=$iv_ruleVariableType.current.getText(); }  
	 EOF 
;

// Rule VariableType
ruleVariableType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='MOLECULE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getMOLECULEKeyword_0()); 
    }

    |
	kw='CHASSIS' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getCHASSISKeyword_1()); 
    }

    |
	kw='COMPLEX' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getCOMPLEXKeyword_2()); 
    }

    |
	kw='RIBOSOME' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getRIBOSOMEKeyword_3()); 
    }

    |
	kw='PROMOTER' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getPROMOTERKeyword_4()); 
    }

    |
	kw='PROTEIN' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getPROTEINKeyword_5()); 
    }

    |
	kw='DNA' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getDNAKeyword_6()); 
    }

    |
	kw='RNA' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getRNAKeyword_7()); 
    }

    |
	kw='GENE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getGENEKeyword_8()); 
    }

    |
	kw='INTEGER' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getINTEGERKeyword_9()); 
    }

    |
	kw='RATE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableTypeAccess().getRATEKeyword_10()); 
    }
)
    ;





// Entry rule entryRuleVariableComplex
entryRuleVariableComplex returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableComplexRule()); }
	 iv_ruleVariableComplex=ruleVariableComplex 
	 { $current=$iv_ruleVariableComplex.current; } 
	 EOF 
;

// Rule VariableComplex
ruleVariableComplex returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableComplexAccess().getVariableComplexAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableComplexAccess().getComponentsVariableNameParserRuleCall_1_0()); 
	    }
		lv_components_1_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableComplexRule());
	        }
       		add(
       			$current, 
       			"components",
        		lv_components_1_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='~' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableComplexAccess().getTildeKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableComplexAccess().getComponentsVariableNameParserRuleCall_2_1_0()); 
	    }
		lv_components_3_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableComplexRule());
	        }
       		add(
       			$current, 
       			"components",
        		lv_components_3_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleVariableAttribute
entryRuleVariableAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableAttributeRule()); }
	 iv_ruleVariableAttribute=ruleVariableAttribute 
	 { $current=$iv_ruleVariableAttribute.current; } 
	 EOF 
;

// Rule VariableAttribute
ruleVariableAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableAttributeAccess().getVariableAttributeAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAttributeAccess().getNameVariableNameParserRuleCall_1_0_0()); 
	    }
		lv_name_1_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAttributeAccess().getComplexVariableComplexParserRuleCall_1_1_0()); 
	    }
		lv_complex_2_0=ruleVariableComplex		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableAttributeRule());
	        }
       		set(
       			$current, 
       			"complex",
        		lv_complex_2_0, 
        		"VariableComplex");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariableAttributeAccess().getFullStopKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAttributeAccess().getAttributeVariableNameParserRuleCall_3_0()); 
	    }
		lv_attribute_4_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableAttributeRule());
	        }
       		set(
       			$current, 
       			"attribute",
        		lv_attribute_4_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableDefinitionRule()); }
	 iv_ruleVariableDefinition=ruleVariableDefinition 
	 { $current=$iv_ruleVariableDefinition.current; } 
	 EOF 
;

// Rule VariableDefinition
ruleVariableDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableDefinitionAccess().getVariableDefinitionAction_0(),
            $current);
    }
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionAccess().getDefinitionVariableDefinitionBuiltInParserRuleCall_1_0_0()); 
	    }
		lv_definition_1_1=ruleVariableDefinitionBuiltIn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_1_1, 
        		"VariableDefinitionBuiltIn");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionAccess().getDefinitionVariableDefinitionUserDefinedParserRuleCall_1_0_1()); 
	    }
		lv_definition_1_2=ruleVariableDefinitionUserDefined		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_1_2, 
        		"VariableDefinitionUserDefined");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionAccess().getDefinitionVariableDefinitionCollectionParserRuleCall_1_0_2()); 
	    }
		lv_definition_1_3=ruleVariableDefinitionCollection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_1_3, 
        		"VariableDefinitionCollection");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionAccess().getDefinitionVariableDefinitionBasicParserRuleCall_1_0_3()); 
	    }
		lv_definition_1_4=ruleVariableDefinitionBasic		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_1_4, 
        		"VariableDefinitionBasic");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableDefinitionAccess().getColonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionAccess().getQualifierVariableQualifierParserRuleCall_2_1_0()); 
	    }
		lv_qualifier_3_0=ruleVariableQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"qualifier",
        		lv_qualifier_3_0, 
        		"VariableQualifier");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleVariableQualifier
entryRuleVariableQualifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableQualifierRule()); } 
	 iv_ruleVariableQualifier=ruleVariableQualifier 
	 { $current=$iv_ruleVariableQualifier.current.getText(); }  
	 EOF 
;

// Rule VariableQualifier
ruleVariableQualifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='observable' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableQualifierAccess().getObservableKeyword()); 
    }

    ;





// Entry rule entryRuleVariableDefinitionBuiltIn
entryRuleVariableDefinitionBuiltIn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableDefinitionBuiltInRule()); }
	 iv_ruleVariableDefinitionBuiltIn=ruleVariableDefinitionBuiltIn 
	 { $current=$iv_ruleVariableDefinitionBuiltIn.current; } 
	 EOF 
;

// Rule VariableDefinitionBuiltIn
ruleVariableDefinitionBuiltIn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableDefinitionBuiltInAccess().getVariableDefinitionBuiltInAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionBuiltInAccess().getTypeVariableTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionBuiltInRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"VariableType");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionBuiltInAccess().getNameVariableNameParserRuleCall_2_0_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionBuiltInRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionBuiltInAccess().getComplexVariableComplexParserRuleCall_2_1_0()); 
	    }
		lv_complex_3_0=ruleVariableComplex		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionBuiltInRule());
	        }
       		set(
       			$current, 
       			"complex",
        		lv_complex_3_0, 
        		"VariableComplex");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariableDefinitionBuiltInAccess().getEqualsSignKeyword_3_0());
    }
	otherlv_5='new' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariableDefinitionBuiltInAccess().getNewKeyword_3_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionBuiltInAccess().getConstructorVariableTypeParserRuleCall_3_2_0_0()); 
	    }
		lv_constructor_6_1=ruleVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionBuiltInRule());
	        }
       		set(
       			$current, 
       			"constructor",
        		lv_constructor_6_1, 
        		"VariableType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionBuiltInAccess().getConstructorVariableNameParserRuleCall_3_2_0_1()); 
	    }
		lv_constructor_6_2=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionBuiltInRule());
	        }
       		set(
       			$current, 
       			"constructor",
        		lv_constructor_6_2, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVariableDefinitionBuiltInAccess().getLeftParenthesisKeyword_3_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionBuiltInAccess().getParametersParameterAssignmentParserRuleCall_3_4_0_0()); 
	    }
		lv_parameters_8_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionBuiltInRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_8_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVariableDefinitionBuiltInAccess().getCommaKeyword_3_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionBuiltInAccess().getParametersParameterAssignmentParserRuleCall_3_4_1_1_0()); 
	    }
		lv_parameters_10_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionBuiltInRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_10_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getVariableDefinitionBuiltInAccess().getRightParenthesisKeyword_3_5());
    }
)?)
;





// Entry rule entryRuleVariableDefinitionUserDefined
entryRuleVariableDefinitionUserDefined returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableDefinitionUserDefinedRule()); }
	 iv_ruleVariableDefinitionUserDefined=ruleVariableDefinitionUserDefined 
	 { $current=$iv_ruleVariableDefinitionUserDefined.current; } 
	 EOF 
;

// Rule VariableDefinitionUserDefined
ruleVariableDefinitionUserDefined returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableDefinitionUserDefinedAccess().getVariableDefinitionUserDefinedAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionUserDefinedAccess().getTypeVariableNameParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionUserDefinedRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionUserDefinedAccess().getNameVariableNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionUserDefinedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariableDefinitionUserDefinedAccess().getEqualsSignKeyword_3_0());
    }
	otherlv_4='new' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariableDefinitionUserDefinedAccess().getNewKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionUserDefinedAccess().getConstructorVariableNameParserRuleCall_3_2_0()); 
	    }
		lv_constructor_5_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionUserDefinedRule());
	        }
       		set(
       			$current, 
       			"constructor",
        		lv_constructor_5_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVariableDefinitionUserDefinedAccess().getLeftParenthesisKeyword_3_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionUserDefinedAccess().getParametersParameterAssignmentParserRuleCall_3_4_0_0()); 
	    }
		lv_parameters_7_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionUserDefinedRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_7_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVariableDefinitionUserDefinedAccess().getCommaKeyword_3_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionUserDefinedAccess().getParametersParameterAssignmentParserRuleCall_3_4_1_1_0()); 
	    }
		lv_parameters_9_0=ruleParameterAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionUserDefinedRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_9_0, 
        		"ParameterAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVariableDefinitionUserDefinedAccess().getRightParenthesisKeyword_3_5());
    }
)?)
;





// Entry rule entryRuleVariableDefinitionCollection
entryRuleVariableDefinitionCollection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableDefinitionCollectionRule()); }
	 iv_ruleVariableDefinitionCollection=ruleVariableDefinitionCollection 
	 { $current=$iv_ruleVariableDefinitionCollection.current; } 
	 EOF 
;

// Rule VariableDefinitionCollection
ruleVariableDefinitionCollection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableDefinitionCollectionAccess().getVariableDefinitionCollectionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionCollectionAccess().getCollectionCollectionIDParserRuleCall_1_0_0()); 
	    }
		lv_collection_1_0=ruleCollectionID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionCollectionRule());
	        }
       		set(
       			$current, 
       			"collection",
        		lv_collection_1_0, 
        		"CollectionID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableDefinitionCollectionAccess().getLessThanSignKeyword_1_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionCollectionAccess().getTypeVariableTypeParserRuleCall_1_2_0_0()); 
	    }
		lv_type_3_1=ruleVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionCollectionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_1, 
        		"VariableType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionCollectionAccess().getTypeVariableNameParserRuleCall_1_2_0_1()); 
	    }
		lv_type_3_2=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionCollectionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_2, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariableDefinitionCollectionAccess().getGreaterThanSignKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionCollectionAccess().getNameVariableNameParserRuleCall_1_4_0()); 
	    }
		lv_name_5_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionCollectionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVariableDefinitionCollectionAccess().getEqualsSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionCollectionAccess().getValueListParserRuleCall_2_1_0()); 
	    }
		lv_value_7_0=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionCollectionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVariableDefinitionCollectionAccess().getRightParenthesisKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleCollectionID
entryRuleCollectionID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCollectionIDRule()); } 
	 iv_ruleCollectionID=ruleCollectionID 
	 { $current=$iv_ruleCollectionID.current.getText(); }  
	 EOF 
;

// Rule CollectionID
ruleCollectionID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='LIST' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCollectionIDAccess().getLISTKeyword_0()); 
    }

    |
	kw='SET' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCollectionIDAccess().getSETKeyword_1()); 
    }

    |
	kw='HASH' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCollectionIDAccess().getHASHKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleVariableDefinitionBasic
entryRuleVariableDefinitionBasic returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableDefinitionBasicRule()); }
	 iv_ruleVariableDefinitionBasic=ruleVariableDefinitionBasic 
	 { $current=$iv_ruleVariableDefinitionBasic.current; } 
	 EOF 
;

// Rule VariableDefinitionBasic
ruleVariableDefinitionBasic returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableDefinitionBasicAccess().getVariableDefinitionBasicAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionBasicAccess().getTypeVariableTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionBasicRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"VariableType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionBasicAccess().getNameVariableNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionBasicRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariableDefinitionBasicAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDefinitionBasicAccess().getExpressionVariableExpressionParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleVariableExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDefinitionBasicRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"VariableExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParameterAssignment
entryRuleParameterAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterAssignmentRule()); }
	 iv_ruleParameterAssignment=ruleParameterAssignment 
	 { $current=$iv_ruleParameterAssignment.current; } 
	 EOF 
;

// Rule ParameterAssignment
ruleParameterAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAssignmentAccess().getNameVariableNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterAssignmentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterAssignmentAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAssignmentAccess().getValueVariableExpressionObjectParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleVariableExpressionObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterAssignmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"VariableExpressionObject");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVariableAssignment
entryRuleVariableAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableAssignmentRule()); }
	 iv_ruleVariableAssignment=ruleVariableAssignment 
	 { $current=$iv_ruleVariableAssignment.current; } 
	 EOF 
;

// Rule VariableAssignment
ruleVariableAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableAssignmentAccess().getVariableAssignmentAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAssignmentAccess().getVariableVariableAssignmentObjectParserRuleCall_1_0()); 
	    }
		lv_variable_1_0=ruleVariableAssignmentObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableAssignmentRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_1_0, 
        		"VariableAssignmentObject");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableAssignmentAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAssignmentAccess().getExpressionVariableExpressionParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleVariableExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableAssignmentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"VariableExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVariableAssignmentObject
entryRuleVariableAssignmentObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableAssignmentObjectRule()); }
	 iv_ruleVariableAssignmentObject=ruleVariableAssignmentObject 
	 { $current=$iv_ruleVariableAssignmentObject.current; } 
	 EOF 
;

// Rule VariableAssignmentObject
ruleVariableAssignmentObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableAssignmentObjectAccess().getVariableAssignmentObjectAction_0_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getVariableAssignmentObjectAccess().getVariableNameParserRuleCall_0_1()); 
    }
ruleVariableName
    { 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getVariableAssignmentObjectAccess().getVariableAttributeParserRuleCall_1()); 
    }
    this_VariableAttribute_2=ruleVariableAttribute
    { 
        $current = $this_VariableAttribute_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVariableExpression
entryRuleVariableExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableExpressionRule()); }
	 iv_ruleVariableExpression=ruleVariableExpression 
	 { $current=$iv_ruleVariableExpression.current; } 
	 EOF 
;

// Rule VariableExpression
ruleVariableExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableExpressionAccess().getVariableExpressionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableExpressionAccess().getMembersVariableExpressionObjectParserRuleCall_1_0()); 
	    }
		lv_members_1_0=ruleVariableExpressionObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableExpressionRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_1_0, 
        		"VariableExpressionObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getVariableExpressionAccess().getVariableExpressionOperatorParserRuleCall_2_0()); 
    }
ruleVariableExpressionOperator
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableExpressionAccess().getMembersVariableExpressionObjectParserRuleCall_2_1_0()); 
	    }
		lv_members_3_0=ruleVariableExpressionObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableExpressionRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_3_0, 
        		"VariableExpressionObject");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleVariableExpressionObject
entryRuleVariableExpressionObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableExpressionObjectRule()); }
	 iv_ruleVariableExpressionObject=ruleVariableExpressionObject 
	 { $current=$iv_ruleVariableExpressionObject.current; } 
	 EOF 
;

// Rule VariableExpressionObject
ruleVariableExpressionObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVariableExpressionObjectAccess().getAtomicVariableExpressionObjectParserRuleCall_0()); 
    }
    this_AtomicVariableExpressionObject_0=ruleAtomicVariableExpressionObject
    { 
        $current = $this_AtomicVariableExpressionObject_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVariableExpressionObjectAccess().getCompoundVariableExpressionObjectParserRuleCall_1()); 
    }
    this_CompoundVariableExpressionObject_1=ruleCompoundVariableExpressionObject
    { 
        $current = $this_CompoundVariableExpressionObject_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAtomicVariableExpressionObject
entryRuleAtomicVariableExpressionObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicVariableExpressionObjectRule()); }
	 iv_ruleAtomicVariableExpressionObject=ruleAtomicVariableExpressionObject 
	 { $current=$iv_ruleAtomicVariableExpressionObject.current; } 
	 EOF 
;

// Rule AtomicVariableExpressionObject
ruleAtomicVariableExpressionObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAtomicVariableExpressionObjectAccess().getAtomicVariableExpressionObjectAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicVariableExpressionObjectAccess().getVariableVariableNameParserRuleCall_0_1_0()); 
	    }
		lv_variable_1_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicVariableExpressionObjectRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_1_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicVariableExpressionObjectAccess().getAttributeVariableAttributeParserRuleCall_1_0()); 
	    }
		lv_attribute_2_0=ruleVariableAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicVariableExpressionObjectRule());
	        }
       		set(
       			$current, 
       			"attribute",
        		lv_attribute_2_0, 
        		"VariableAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicVariableExpressionObjectAccess().getComplexVariableComplexParserRuleCall_2_0()); 
	    }
		lv_complex_3_0=ruleVariableComplex		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicVariableExpressionObjectRule());
	        }
       		set(
       			$current, 
       			"complex",
        		lv_complex_3_0, 
        		"VariableComplex");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicVariableExpressionObjectAccess().getValueREALParserRuleCall_3_0()); 
	    }
		lv_value_4_0=ruleREAL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicVariableExpressionObjectRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"REAL");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicVariableExpressionObjectAccess().getQuantityQuantityParserRuleCall_4_0()); 
	    }
		lv_quantity_5_0=ruleQuantity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicVariableExpressionObjectRule());
	        }
       		set(
       			$current, 
       			"quantity",
        		lv_quantity_5_0, 
        		"Quantity");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_string_6_0=RULE_STRING
		{
			newLeafNode(lv_string_6_0, grammarAccess.getAtomicVariableExpressionObjectAccess().getStringSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicVariableExpressionObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_6_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleCompoundVariableExpressionObject
entryRuleCompoundVariableExpressionObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompoundVariableExpressionObjectRule()); }
	 iv_ruleCompoundVariableExpressionObject=ruleCompoundVariableExpressionObject 
	 { $current=$iv_ruleCompoundVariableExpressionObject.current; } 
	 EOF 
;

// Rule CompoundVariableExpressionObject
ruleCompoundVariableExpressionObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCompoundVariableExpressionObjectAccess().getCompoundVariableExpressionObjectAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompoundVariableExpressionObjectAccess().getListListParserRuleCall_1_0()); 
	    }
		lv_list_1_0=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompoundVariableExpressionObjectRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_1_0, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVariableExpressionOperator
entryRuleVariableExpressionOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableExpressionOperatorRule()); } 
	 iv_ruleVariableExpressionOperator=ruleVariableExpressionOperator 
	 { $current=$iv_ruleVariableExpressionOperator.current.getText(); }  
	 EOF 
;

// Rule VariableExpressionOperator
ruleVariableExpressionOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableExpressionOperatorAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableExpressionOperatorAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='|' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariableExpressionOperatorAccess().getVerticalLineKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleRuleDefinition
entryRuleRuleDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleDefinitionRule()); }
	 iv_ruleRuleDefinition=ruleRuleDefinition 
	 { $current=$iv_ruleRuleDefinition.current; } 
	 EOF 
;

// Rule RuleDefinition
ruleRuleDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRuleDefinitionAccess().getRuleDefinitionAction_0(),
            $current);
    }
)	otherlv_1='RULE' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRuleDefinitionAccess().getRULEKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleDefinitionAccess().getNameVariableNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleDefinitionAccess().getColonKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRuleDefinitionAccess().getLhsRuleObjectParserRuleCall_4_0_0()); 
	    }
		lv_lhs_4_0=ruleRuleObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleDefinitionRule());
	        }
       		add(
       			$current, 
       			"lhs",
        		lv_lhs_4_0, 
        		"RuleObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='+' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRuleDefinitionAccess().getPlusSignKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleDefinitionAccess().getLhsRuleObjectParserRuleCall_4_1_1_0()); 
	    }
		lv_lhs_6_0=ruleRuleObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleDefinitionRule());
	        }
       		add(
       			$current, 
       			"lhs",
        		lv_lhs_6_0, 
        		"RuleObject");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_7='->' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRuleDefinitionAccess().getHyphenMinusGreaterThanSignKeyword_5_0());
    }

    |(
(
		lv_reversible_8_0=	'<->' 
    {
        newLeafNode(lv_reversible_8_0, grammarAccess.getRuleDefinitionAccess().getReversibleLessThanSignHyphenMinusGreaterThanSignKeyword_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleDefinitionRule());
	        }
       		setWithLastConsumed($current, "reversible", true, "<->");
	    }

)
))((
(
		{ 
	        newCompositeNode(grammarAccess.getRuleDefinitionAccess().getRhsRuleObjectParserRuleCall_6_0_0()); 
	    }
		lv_rhs_9_0=ruleRuleObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleDefinitionRule());
	        }
       		add(
       			$current, 
       			"rhs",
        		lv_rhs_9_0, 
        		"RuleObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10='+' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRuleDefinitionAccess().getPlusSignKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleDefinitionAccess().getRhsRuleObjectParserRuleCall_6_1_1_0()); 
	    }
		lv_rhs_11_0=ruleRuleObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleDefinitionRule());
	        }
       		add(
       			$current, 
       			"rhs",
        		lv_rhs_11_0, 
        		"RuleObject");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleRuleObject
entryRuleRuleObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleObjectRule()); }
	 iv_ruleRuleObject=ruleRuleObject 
	 { $current=$iv_ruleRuleObject.current; } 
	 EOF 
;

// Rule RuleObject
ruleRuleObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRuleObjectAccess().getRuleObjectAction_0_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getRuleObjectAccess().getVariableNameParserRuleCall_0_1()); 
    }
ruleVariableName
    { 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getRuleObjectAccess().getVariableComplexParserRuleCall_1()); 
    }
    this_VariableComplex_2=ruleVariableComplex
    { 
        $current = $this_VariableComplex_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleATGCDefinition
entryRuleATGCDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getATGCDefinitionRule()); }
	 iv_ruleATGCDefinition=ruleATGCDefinition 
	 { $current=$iv_ruleATGCDefinition.current; } 
	 EOF 
;

// Rule ATGCDefinition
ruleATGCDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getATGCDefinitionAccess().getATGCDefinitionAction_0(),
            $current);
    }
)	otherlv_1='ATGC' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getATGCDefinitionAccess().getATGCKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getATGCDefinitionAccess().getCommandATGCCommandParserRuleCall_2_0()); 
	    }
		lv_command_2_0=ruleATGCCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getATGCDefinitionRule());
	        }
       		set(
       			$current, 
       			"command",
        		lv_command_2_0, 
        		"ATGCCommand");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getATGCDefinitionAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getATGCDefinitionAccess().getArgumentsVariableNameParserRuleCall_4_0()); 
	    }
		lv_arguments_4_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getATGCDefinitionRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getATGCDefinitionAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getATGCDefinitionAccess().getArgumentsVariableNameParserRuleCall_5_1_0()); 
	    }
		lv_arguments_6_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getATGCDefinitionRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_6_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleATGCCommand
entryRuleATGCCommand returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getATGCCommandRule()); } 
	 iv_ruleATGCCommand=ruleATGCCommand 
	 { $current=$iv_ruleATGCCommand.current.getText(); }  
	 EOF 
;

// Rule ATGCCommand
ruleATGCCommand returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='ARRANGE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getATGCCommandAccess().getARRANGEKeyword()); 
    }

    ;





// Entry rule entryRulePropertyDefinition
entryRulePropertyDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyDefinitionRule()); }
	 iv_rulePropertyDefinition=rulePropertyDefinition 
	 { $current=$iv_rulePropertyDefinition.current; } 
	 EOF 
;

// Rule PropertyDefinition
rulePropertyDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPropertyDefinitionAccess().getPropertyDefinitionAction_0(),
            $current);
    }
)	otherlv_1='VERIFY' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyDefinitionAccess().getVERIFYKeyword_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDefinitionAccess().getPropertyProbabilityPropertyParserRuleCall_2_0_0()); 
	    }
		lv_property_2_1=ruleProbabilityProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDefinitionRule());
	        }
       		set(
       			$current, 
       			"property",
        		lv_property_2_1, 
        		"ProbabilityProperty");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getPropertyDefinitionAccess().getPropertyRewardPropertyParserRuleCall_2_0_1()); 
	    }
		lv_property_2_2=ruleRewardProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDefinitionRule());
	        }
       		set(
       			$current, 
       			"property",
        		lv_property_2_2, 
        		"RewardProperty");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleProbabilityProperty
entryRuleProbabilityProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProbabilityPropertyRule()); }
	 iv_ruleProbabilityProperty=ruleProbabilityProperty 
	 { $current=$iv_ruleProbabilityProperty.current; } 
	 EOF 
;

// Rule ProbabilityProperty
ruleProbabilityProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProbabilityPropertyAccess().getProbabilityPropertyAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProbabilityPropertyAccess().getStateFormula1StateFormulaParserRuleCall_1_0()); 
	    }
		lv_stateFormula1_1_0=ruleStateFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProbabilityPropertyRule());
	        }
       		set(
       			$current, 
       			"stateFormula1",
        		lv_stateFormula1_1_0, 
        		"StateFormula");
	        afterParserOrEnumRuleCall();
	    }

)
)(((((
(
		lv_isEventually_2_0=	'EVENTUALLY HOLDS' 
    {
        newLeafNode(lv_isEventually_2_0, grammarAccess.getProbabilityPropertyAccess().getIsEventuallyEVENTUALLYHOLDSKeyword_2_0_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProbabilityPropertyRule());
	        }
       		setWithLastConsumed($current, "isEventually", true, "EVENTUALLY HOLDS");
	    }

)
)
    |(
(
		lv_isNever_3_0=	'NEVER HOLDS' 
    {
        newLeafNode(lv_isNever_3_0, grammarAccess.getProbabilityPropertyAccess().getIsNeverNEVERHOLDSKeyword_2_0_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProbabilityPropertyRule());
	        }
       		setWithLastConsumed($current, "isNever", true, "NEVER HOLDS");
	    }

)
)
    |(
(
		lv_isAlways_4_0=	'ALWAYS HOLDS' 
    {
        newLeafNode(lv_isAlways_4_0, grammarAccess.getProbabilityPropertyAccess().getIsAlwaysALWAYSHOLDSKeyword_2_0_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProbabilityPropertyRule());
	        }
       		setWithLastConsumed($current, "isAlways", true, "ALWAYS HOLDS");
	    }

)
))
    |(((
(
		lv_isUntilThen_5_0=	'WILL HOLD UNTIL THEN' 
    {
        newLeafNode(lv_isUntilThen_5_0, grammarAccess.getProbabilityPropertyAccess().getIsUntilThenWILLHOLDUNTILTHENKeyword_2_0_0_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProbabilityPropertyRule());
	        }
       		setWithLastConsumed($current, "isUntilThen", true, "WILL HOLD UNTIL THEN");
	    }

)
)
    |(
(
		lv_isFollowedBy_6_0=	'IS FOLLOWED BY' 
    {
        newLeafNode(lv_isFollowedBy_6_0, grammarAccess.getProbabilityPropertyAccess().getIsFollowedByISFOLLOWEDBYKeyword_2_0_0_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProbabilityPropertyRule());
	        }
       		setWithLastConsumed($current, "isFollowedBy", true, "IS FOLLOWED BY");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getProbabilityPropertyAccess().getStateFormula2StateFormulaParserRuleCall_2_0_0_1_1_0()); 
	    }
		lv_stateFormula2_7_0=ruleStateFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProbabilityPropertyRule());
	        }
       		set(
       			$current, 
       			"stateFormula2",
        		lv_stateFormula2_7_0, 
        		"StateFormula");
	        afterParserOrEnumRuleCall();
	    }

)
)))((
(
		{ 
	        newCompositeNode(grammarAccess.getProbabilityPropertyAccess().getTimeInstantTimeInstantParserRuleCall_2_0_1_0_0()); 
	    }
		lv_timeInstant_8_0=ruleTimeInstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProbabilityPropertyRule());
	        }
       		set(
       			$current, 
       			"timeInstant",
        		lv_timeInstant_8_0, 
        		"TimeInstant");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getProbabilityPropertyAccess().getTimeIntervalTimeIntervalParserRuleCall_2_0_1_1_0()); 
	    }
		lv_timeInterval_9_0=ruleTimeInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProbabilityPropertyRule());
	        }
       		set(
       			$current, 
       			"timeInterval",
        		lv_timeInterval_9_0, 
        		"TimeInterval");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
(
		lv_isSteadyState_10_0=	'HOLDS IN STEADY-STATE' 
    {
        newLeafNode(lv_isSteadyState_10_0, grammarAccess.getProbabilityPropertyAccess().getIsSteadyStateHOLDSINSTEADYSTATEKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProbabilityPropertyRule());
	        }
       		setWithLastConsumed($current, "isSteadyState", true, "HOLDS IN STEADY-STATE");
	    }

)
)
    |(
(
		lv_isInfinitelyOften_11_0=	'HOLDS INFINITELY OFTEN' 
    {
        newLeafNode(lv_isInfinitelyOften_11_0, grammarAccess.getProbabilityPropertyAccess().getIsInfinitelyOftenHOLDSINFINITELYOFTENKeyword_2_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProbabilityPropertyRule());
	        }
       		setWithLastConsumed($current, "isInfinitelyOften", true, "HOLDS INFINITELY OFTEN");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getProbabilityPropertyAccess().getProbabilityConstraintProbabilityConstraintParserRuleCall_3_0()); 
	    }
		lv_probabilityConstraint_12_0=ruleProbabilityConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProbabilityPropertyRule());
	        }
       		set(
       			$current, 
       			"probabilityConstraint",
        		lv_probabilityConstraint_12_0, 
        		"ProbabilityConstraint");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_13='GIVEN' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getProbabilityPropertyAccess().getGIVENKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProbabilityPropertyAccess().getInitialConditionsPropertyInitialConditionParserRuleCall_4_1_0()); 
	    }
		lv_initialConditions_14_0=rulePropertyInitialCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProbabilityPropertyRule());
	        }
       		add(
       			$current, 
       			"initialConditions",
        		lv_initialConditions_14_0, 
        		"PropertyInitialCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getProbabilityPropertyAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProbabilityPropertyAccess().getInitialConditionsPropertyInitialConditionParserRuleCall_4_2_1_0()); 
	    }
		lv_initialConditions_16_0=rulePropertyInitialCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProbabilityPropertyRule());
	        }
       		add(
       			$current, 
       			"initialConditions",
        		lv_initialConditions_16_0, 
        		"PropertyInitialCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleRewardProperty
entryRuleRewardProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRewardPropertyRule()); }
	 iv_ruleRewardProperty=ruleRewardProperty 
	 { $current=$iv_ruleRewardProperty.current; } 
	 EOF 
;

// Rule RewardProperty
ruleRewardProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRewardPropertyAccess().getRewardPropertyAction_0(),
            $current);
    }
)	otherlv_1='EXPECTED' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRewardPropertyAccess().getEXPECTEDKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRewardPropertyAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRewardPropertyAccess().getNameVariableNameParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRewardPropertyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRewardPropertyAccess().getRightSquareBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRewardPropertyAccess().getTimeInstantRewardTimeInstantParserRuleCall_5_0()); 
	    }
		lv_timeInstant_5_0=ruleRewardTimeInstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRewardPropertyRule());
	        }
       		set(
       			$current, 
       			"timeInstant",
        		lv_timeInstant_5_0, 
        		"RewardTimeInstant");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='IS ' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRewardPropertyAccess().getISKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRewardPropertyAccess().getConcentrationConstraintConcentrationConstraintParserRuleCall_7_0()); 
	    }
		lv_concentrationConstraint_7_0=ruleConcentrationConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRewardPropertyRule());
	        }
       		set(
       			$current, 
       			"concentrationConstraint",
        		lv_concentrationConstraint_7_0, 
        		"ConcentrationConstraint");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='GIVEN' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRewardPropertyAccess().getGIVENKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRewardPropertyAccess().getInitialConditionsPropertyInitialConditionParserRuleCall_8_1_0()); 
	    }
		lv_initialConditions_9_0=rulePropertyInitialCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRewardPropertyRule());
	        }
       		add(
       			$current, 
       			"initialConditions",
        		lv_initialConditions_9_0, 
        		"PropertyInitialCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRewardPropertyAccess().getCommaKeyword_8_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRewardPropertyAccess().getInitialConditionsPropertyInitialConditionParserRuleCall_8_2_1_0()); 
	    }
		lv_initialConditions_11_0=rulePropertyInitialCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRewardPropertyRule());
	        }
       		add(
       			$current, 
       			"initialConditions",
        		lv_initialConditions_11_0, 
        		"PropertyInitialCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleStateExpression
entryRuleStateExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateExpressionRule()); }
	 iv_ruleStateExpression=ruleStateExpression 
	 { $current=$iv_ruleStateExpression.current; } 
	 EOF 
;

// Rule StateExpression
ruleStateExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateExpressionAccess().getStateExpressionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateExpressionAccess().getNameVariableNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateExpressionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateExpressionAccess().getOperatorRelationalOperatorParserRuleCall_2_0()); 
	    }
		lv_operator_2_0=ruleRelationalOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"RelationalOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateExpressionAccess().getConcentrationQuantityConcentrationQuantityParserRuleCall_3_0()); 
	    }
		lv_concentrationQuantity_3_0=ruleConcentrationQuantity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateExpressionRule());
	        }
       		set(
       			$current, 
       			"concentrationQuantity",
        		lv_concentrationQuantity_3_0, 
        		"ConcentrationQuantity");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStateFormula
entryRuleStateFormula returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateFormulaRule()); }
	 iv_ruleStateFormula=ruleStateFormula 
	 { $current=$iv_ruleStateFormula.current; } 
	 EOF 
;

// Rule StateFormula
ruleStateFormula returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateFormulaAccess().getStateFormulaAction_0_0(),
            $current);
    }
)(
(
		lv_formula_1_0=	'[' 
    {
        newLeafNode(lv_formula_1_0, grammarAccess.getStateFormulaAccess().getFormulaLeftSquareBracketKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateFormulaRule());
	        }
       		setWithLastConsumed($current, "formula", lv_formula_1_0, "[");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateFormulaAccess().getAtomicFormulaStateExpressionParserRuleCall_0_2_0()); 
	    }
		lv_atomicFormula_2_0=ruleStateExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateFormulaRule());
	        }
       		set(
       			$current, 
       			"atomicFormula",
        		lv_atomicFormula_2_0, 
        		"StateExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateFormulaAccess().getRightSquareBracketKeyword_0_3());
    }
)
    |(	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStateFormulaAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		lv_isNegation_5_0=	'NOT' 
    {
        newLeafNode(lv_isNegation_5_0, grammarAccess.getStateFormulaAccess().getIsNegationNOTKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateFormulaRule());
	        }
       		setWithLastConsumed($current, "isNegation", true, "NOT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateFormulaAccess().getNegatedFormulaStateFormulaParserRuleCall_1_2_0()); 
	    }
		lv_negatedFormula_6_0=ruleStateFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateFormulaRule());
	        }
       		set(
       			$current, 
       			"negatedFormula",
        		lv_negatedFormula_6_0, 
        		"StateFormula");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateFormulaAccess().getRightSquareBracketKeyword_1_3());
    }
)
    |(	otherlv_8='[' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStateFormulaAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateFormulaAccess().getLeftFormulaStateFormulaParserRuleCall_2_1_0()); 
	    }
		lv_leftFormula_9_0=ruleStateFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateFormulaRule());
	        }
       		set(
       			$current, 
       			"leftFormula",
        		lv_leftFormula_9_0, 
        		"StateFormula");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_isConjunction_10_0=	'AND' 
    {
        newLeafNode(lv_isConjunction_10_0, grammarAccess.getStateFormulaAccess().getIsConjunctionANDKeyword_2_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateFormulaRule());
	        }
       		setWithLastConsumed($current, "isConjunction", true, "AND");
	    }

)
)
    |(
(
		lv_isDisjunction_11_0=	'OR' 
    {
        newLeafNode(lv_isDisjunction_11_0, grammarAccess.getStateFormulaAccess().getIsDisjunctionORKeyword_2_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateFormulaRule());
	        }
       		setWithLastConsumed($current, "isDisjunction", true, "OR");
	    }

)
)
    |(
(
		lv_isImplication_12_0=	'IMPLIES' 
    {
        newLeafNode(lv_isImplication_12_0, grammarAccess.getStateFormulaAccess().getIsImplicationIMPLIESKeyword_2_2_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateFormulaRule());
	        }
       		setWithLastConsumed($current, "isImplication", true, "IMPLIES");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getStateFormulaAccess().getRightFormulaStateFormulaParserRuleCall_2_3_0()); 
	    }
		lv_rightFormula_13_0=ruleStateFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateFormulaRule());
	        }
       		set(
       			$current, 
       			"rightFormula",
        		lv_rightFormula_13_0, 
        		"StateFormula");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_14=']' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getStateFormulaAccess().getRightSquareBracketKeyword_2_4());
    }
))
;





// Entry rule entryRuleTimeInstant
entryRuleTimeInstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeInstantRule()); }
	 iv_ruleTimeInstant=ruleTimeInstant 
	 { $current=$iv_ruleTimeInstant.current; } 
	 EOF 
;

// Rule TimeInstant
ruleTimeInstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTimeInstantAccess().getTimeInstantAction_0(),
            $current);
    }
)(((
(
		lv_isEqualTo_1_0=	'AT' 
    {
        newLeafNode(lv_isEqualTo_1_0, grammarAccess.getTimeInstantAccess().getIsEqualToATKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeInstantRule());
	        }
       		setWithLastConsumed($current, "isEqualTo", true, "AT");
	    }

)
)(
(
		lv_timeInstant_2_0=RULE_INT
		{
			newLeafNode(lv_timeInstant_2_0, grammarAccess.getTimeInstantAccess().getTimeInstantINTTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeInstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"timeInstant",
        		lv_timeInstant_2_0, 
        		"INT");
	    }

)
))
    |((
(
		lv_isLessThanOrEqual_3_0=	'BEFORE' 
    {
        newLeafNode(lv_isLessThanOrEqual_3_0, grammarAccess.getTimeInstantAccess().getIsLessThanOrEqualBEFOREKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeInstantRule());
	        }
       		setWithLastConsumed($current, "isLessThanOrEqual", true, "BEFORE");
	    }

)
)(
(
		lv_timeInstant_4_0=RULE_INT
		{
			newLeafNode(lv_timeInstant_4_0, grammarAccess.getTimeInstantAccess().getTimeInstantINTTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeInstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"timeInstant",
        		lv_timeInstant_4_0, 
        		"INT");
	    }

)
))
    |((
(
		lv_isGreaterThanOrEqual_5_0=	'AFTER' 
    {
        newLeafNode(lv_isGreaterThanOrEqual_5_0, grammarAccess.getTimeInstantAccess().getIsGreaterThanOrEqualAFTERKeyword_1_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeInstantRule());
	        }
       		setWithLastConsumed($current, "isGreaterThanOrEqual", true, "AFTER");
	    }

)
)(
(
		lv_timeInstant_6_0=RULE_INT
		{
			newLeafNode(lv_timeInstant_6_0, grammarAccess.getTimeInstantAccess().getTimeInstantINTTerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeInstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"timeInstant",
        		lv_timeInstant_6_0, 
        		"INT");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeInstantAccess().getTimeUnitTimeUnitParserRuleCall_2_0()); 
	    }
		lv_timeUnit_7_0=ruleTimeUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeInstantRule());
	        }
       		set(
       			$current, 
       			"timeUnit",
        		lv_timeUnit_7_0, 
        		"TimeUnit");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTimeInterval
entryRuleTimeInterval returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeIntervalRule()); }
	 iv_ruleTimeInterval=ruleTimeInterval 
	 { $current=$iv_ruleTimeInterval.current; } 
	 EOF 
;

// Rule TimeInterval
ruleTimeInterval returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTimeIntervalAccess().getTimeIntervalAction_0(),
            $current);
    }
)	otherlv_1='WITHIN' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTimeIntervalAccess().getWITHINKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTimeIntervalAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		lv_lowerBound_3_0=RULE_INT
		{
			newLeafNode(lv_lowerBound_3_0, grammarAccess.getTimeIntervalAccess().getLowerBoundINTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeIntervalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_3_0, 
        		"INT");
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTimeIntervalAccess().getCommaKeyword_4());
    }
(
(
		lv_upperBound_5_0=RULE_INT
		{
			newLeafNode(lv_upperBound_5_0, grammarAccess.getTimeIntervalAccess().getUpperBoundINTTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeIntervalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"upperBound",
        		lv_upperBound_5_0, 
        		"INT");
	    }

)
)	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTimeIntervalAccess().getRightSquareBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeIntervalAccess().getTimeUnitTimeUnitParserRuleCall_7_0()); 
	    }
		lv_timeUnit_7_0=ruleTimeUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeIntervalRule());
	        }
       		set(
       			$current, 
       			"timeUnit",
        		lv_timeUnit_7_0, 
        		"TimeUnit");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRewardTimeInstant
entryRuleRewardTimeInstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRewardTimeInstantRule()); }
	 iv_ruleRewardTimeInstant=ruleRewardTimeInstant 
	 { $current=$iv_ruleRewardTimeInstant.current; } 
	 EOF 
;

// Rule RewardTimeInstant
ruleRewardTimeInstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRewardTimeInstantAccess().getRewardTimeInstantAction_0(),
            $current);
    }
)((
(
		lv_isEqualTo_1_0=	'AT' 
    {
        newLeafNode(lv_isEqualTo_1_0, grammarAccess.getRewardTimeInstantAccess().getIsEqualToATKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRewardTimeInstantRule());
	        }
       		setWithLastConsumed($current, "isEqualTo", true, "AT");
	    }

)
)
    |(
(
		lv_isLessThanOrEqual_2_0=	'WITHIN' 
    {
        newLeafNode(lv_isLessThanOrEqual_2_0, grammarAccess.getRewardTimeInstantAccess().getIsLessThanOrEqualWITHINKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRewardTimeInstantRule());
	        }
       		setWithLastConsumed($current, "isLessThanOrEqual", true, "WITHIN");
	    }

)
))(
(
		lv_timeValue_3_0=RULE_INT
		{
			newLeafNode(lv_timeValue_3_0, grammarAccess.getRewardTimeInstantAccess().getTimeValueINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRewardTimeInstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"timeValue",
        		lv_timeValue_3_0, 
        		"INT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRewardTimeInstantAccess().getTimeUnitTimeUnitParserRuleCall_3_0()); 
	    }
		lv_timeUnit_4_0=ruleTimeUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRewardTimeInstantRule());
	        }
       		set(
       			$current, 
       			"timeUnit",
        		lv_timeUnit_4_0, 
        		"TimeUnit");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProbabilityConstraint
entryRuleProbabilityConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProbabilityConstraintRule()); }
	 iv_ruleProbabilityConstraint=ruleProbabilityConstraint 
	 { $current=$iv_ruleProbabilityConstraint.current; } 
	 EOF 
;

// Rule ProbabilityConstraint
ruleProbabilityConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProbabilityConstraintAccess().getProbabilityConstraintAction_0(),
            $current);
    }
)	otherlv_1='WITH PROBABILITY' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProbabilityConstraintAccess().getWITHPROBABILITYKeyword_1());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getProbabilityConstraintAccess().getOperatorRelationalOperatorParserRuleCall_2_0_0_0()); 
	    }
		lv_operator_2_0=ruleRelationalOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProbabilityConstraintRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"RelationalOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProbabilityConstraintAccess().getProbabilityUnitIntervalParserRuleCall_2_0_1_0()); 
	    }
		lv_probability_3_0=ruleUnitInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProbabilityConstraintRule());
	        }
       		set(
       			$current, 
       			"probability",
        		lv_probability_3_0, 
        		"UnitInterval");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_hasUnknownProbability_4_0=	'?' 
    {
        newLeafNode(lv_hasUnknownProbability_4_0, grammarAccess.getProbabilityConstraintAccess().getHasUnknownProbabilityQuestionMarkKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProbabilityConstraintRule());
	        }
       		setWithLastConsumed($current, "hasUnknownProbability", true, "?");
	    }

)
)))
;





// Entry rule entryRuleConcentrationConstraint
entryRuleConcentrationConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcentrationConstraintRule()); }
	 iv_ruleConcentrationConstraint=ruleConcentrationConstraint 
	 { $current=$iv_ruleConcentrationConstraint.current; } 
	 EOF 
;

// Rule ConcentrationConstraint
ruleConcentrationConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConcentrationConstraintAccess().getConcentrationConstraintAction_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getConcentrationConstraintAccess().getOperatorRelationalOperatorParserRuleCall_0_1_0_0()); 
	    }
		lv_operator_1_0=ruleRelationalOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcentrationConstraintRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"RelationalOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConcentrationConstraintAccess().getValueREALParserRuleCall_0_1_1_0()); 
	    }
		lv_value_2_0=ruleREAL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcentrationConstraintRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"REAL");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConcentrationConstraintAccess().getUnitConcentrationUnitParserRuleCall_0_1_2_0()); 
	    }
		lv_unit_3_0=ruleConcentrationUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcentrationConstraintRule());
	        }
       		set(
       			$current, 
       			"unit",
        		lv_unit_3_0, 
        		"ConcentrationUnit");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
(
		lv_isUnknown_4_0=	'?' 
    {
        newLeafNode(lv_isUnknown_4_0, grammarAccess.getConcentrationConstraintAccess().getIsUnknownQuestionMarkKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcentrationConstraintRule());
	        }
       		setWithLastConsumed($current, "isUnknown", true, "?");
	    }

)
))
;





// Entry rule entryRulePropertyInitialCondition
entryRulePropertyInitialCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyInitialConditionRule()); }
	 iv_rulePropertyInitialCondition=rulePropertyInitialCondition 
	 { $current=$iv_rulePropertyInitialCondition.current; } 
	 EOF 
;

// Rule PropertyInitialCondition
rulePropertyInitialCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPropertyInitialConditionAccess().getPropertyInitialConditionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyInitialConditionAccess().getVariableVariableAssignmentObjectParserRuleCall_1_0()); 
	    }
		lv_variable_1_0=ruleVariableAssignmentObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyInitialConditionRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_1_0, 
        		"VariableAssignmentObject");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPropertyInitialConditionAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyInitialConditionAccess().getValueConcentrationQuantityParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleConcentrationQuantity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyInitialConditionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"ConcentrationQuantity");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleREAL
entryRuleREAL returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getREALRule()); } 
	 iv_ruleREAL=ruleREAL 
	 { $current=$iv_ruleREAL.current.getText(); }  
	 EOF 
;

// Rule REAL
ruleREAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getREALAccess().getDecimalParserRuleCall_0()); 
    }
    this_Decimal_0=ruleDecimal    {
		$current.merge(this_Decimal_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getREALAccess().getDecimalExpParserRuleCall_1()); 
    }
    this_DecimalExp_1=ruleDecimalExp    {
		$current.merge(this_DecimalExp_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleUnitInterval
entryRuleUnitInterval returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnitIntervalRule()); } 
	 iv_ruleUnitInterval=ruleUnitInterval 
	 { $current=$iv_ruleUnitInterval.current.getText(); }  
	 EOF 
;

// Rule UnitInterval
ruleUnitInterval returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='1.0' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnitIntervalAccess().getDigitOneFullStopDigitZeroKeyword_0()); 
    }

    |(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnitIntervalAccess().getFullStopKeyword_1_0()); 
    }
(    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getUnitIntervalAccess().getINTTerminalRuleCall_1_1()); 
    }
)*)
    |(
	kw='0.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnitIntervalAccess().getDigitZeroFullStopKeyword_2_0()); 
    }
(    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getUnitIntervalAccess().getINTTerminalRuleCall_2_1()); 
    }
)*))
    ;





// Entry rule entryRuleDecimal
entryRuleDecimal returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getDecimalRule()); } 
	 iv_ruleDecimal=ruleDecimal 
	 { $current=$iv_ruleDecimal.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Decimal
ruleDecimal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalAccess().getHyphenMinusKeyword_0_1()); 
    }
)?    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getDecimalAccess().getINTTerminalRuleCall_1()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalAccess().getFullStopKeyword_2_0()); 
    }
    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getDecimalAccess().getINTTerminalRuleCall_2_1()); 
    }
)?)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDecimalExp
entryRuleDecimalExp returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getDecimalExpRule()); } 
	 iv_ruleDecimalExp=ruleDecimalExp 
	 { $current=$iv_ruleDecimalExp.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DecimalExp
ruleDecimalExp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getHyphenMinusKeyword_0_1()); 
    }
)?    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getDecimalExpAccess().getINTTerminalRuleCall_1()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getFullStopKeyword_2_0()); 
    }
    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getDecimalExpAccess().getINTTerminalRuleCall_2_1()); 
    }
)?(
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getEKeyword_3_0()); 
    }

    |
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getEKeyword_3_1()); 
    }
)(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getPlusSignKeyword_4_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getHyphenMinusKeyword_4_1()); 
    }
)?    this_INT_9=RULE_INT    {
		$current.merge(this_INT_9);
    }

    { 
    newLeafNode(this_INT_9, grammarAccess.getDecimalExpAccess().getINTTerminalRuleCall_5()); 
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTimeUnit
entryRuleTimeUnit returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeUnitRule()); } 
	 iv_ruleTimeUnit=ruleTimeUnit 
	 { $current=$iv_ruleTimeUnit.current.getText(); }  
	 EOF 
;

// Rule TimeUnit
ruleTimeUnit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='s' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimeUnitAccess().getSKeyword_0()); 
    }

    |
	kw='min' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimeUnitAccess().getMinKeyword_1()); 
    }

    |
	kw='mins' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimeUnitAccess().getMinsKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleFluxUnit
entryRuleFluxUnit returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFluxUnitRule()); } 
	 iv_ruleFluxUnit=ruleFluxUnit 
	 { $current=$iv_ruleFluxUnit.current.getText(); }  
	 EOF 
;

// Rule FluxUnit
ruleFluxUnit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='s^-1' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFluxUnitAccess().getS1Keyword_0()); 
    }

    |
	kw='min^-1' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFluxUnitAccess().getMin1Keyword_1()); 
    }
)
    ;





// Entry rule entryRuleConcentrationUnit
entryRuleConcentrationUnit returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcentrationUnitRule()); } 
	 iv_ruleConcentrationUnit=ruleConcentrationUnit 
	 { $current=$iv_ruleConcentrationUnit.current.getText(); }  
	 EOF 
;

// Rule ConcentrationUnit
ruleConcentrationUnit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='M' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConcentrationUnitAccess().getMKeyword_0()); 
    }

    |
	kw='mM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConcentrationUnitAccess().getMMKeyword_1()); 
    }

    |
	kw='uM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConcentrationUnitAccess().getUMKeyword_2()); 
    }

    |
	kw='nM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConcentrationUnitAccess().getNMKeyword_3()); 
    }

    |
	kw='pM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConcentrationUnitAccess().getPMKeyword_4()); 
    }

    |
	kw='fM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConcentrationUnitAccess().getFMKeyword_5()); 
    }

    |
	kw='molecule' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConcentrationUnitAccess().getMoleculeKeyword_6()); 
    }

    |
	kw='molecules' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConcentrationUnitAccess().getMoleculesKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleUnit
entryRuleUnit returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnitRule()); } 
	 iv_ruleUnit=ruleUnit 
	 { $current=$iv_ruleUnit.current.getText(); }  
	 EOF 
;

// Rule Unit
ruleUnit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnitAccess().getTimeUnitParserRuleCall_0()); 
    }
    this_TimeUnit_0=ruleTimeUnit    {
		$current.merge(this_TimeUnit_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUnitAccess().getFluxUnitParserRuleCall_1()); 
    }
    this_FluxUnit_1=ruleFluxUnit    {
		$current.merge(this_FluxUnit_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUnitAccess().getConcentrationUnitParserRuleCall_2()); 
    }
    this_ConcentrationUnit_2=ruleConcentrationUnit    {
		$current.merge(this_ConcentrationUnit_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleQuantity
entryRuleQuantity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuantityRule()); }
	 iv_ruleQuantity=ruleQuantity 
	 { $current=$iv_ruleQuantity.current; } 
	 EOF 
;

// Rule Quantity
ruleQuantity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQuantityAccess().getQuantityAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getQuantityAccess().getValueREALParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleREAL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuantityRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"REAL");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getQuantityAccess().getUnitsUnitParserRuleCall_2_0()); 
	    }
		lv_units_2_0=ruleUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuantityRule());
	        }
       		set(
       			$current, 
       			"units",
        		lv_units_2_0, 
        		"Unit");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConcentrationQuantity
entryRuleConcentrationQuantity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcentrationQuantityRule()); }
	 iv_ruleConcentrationQuantity=ruleConcentrationQuantity 
	 { $current=$iv_ruleConcentrationQuantity.current; } 
	 EOF 
;

// Rule ConcentrationQuantity
ruleConcentrationQuantity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConcentrationQuantityAccess().getConcentrationQuantityAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConcentrationQuantityAccess().getValueREALParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleREAL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcentrationQuantityRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"REAL");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConcentrationQuantityAccess().getUnitConcentrationUnitParserRuleCall_2_0()); 
	    }
		lv_unit_2_0=ruleConcentrationUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcentrationQuantityRule());
	        }
       		set(
       			$current, 
       			"unit",
        		lv_unit_2_0, 
        		"ConcentrationUnit");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationalOperatorRule()); } 
	 iv_ruleRelationalOperator=ruleRelationalOperator 
	 { $current=$iv_ruleRelationalOperator.current.getText(); }  
	 EOF 
;

// Rule RelationalOperator
ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_2()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_3()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_4()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); 
    }
)
    ;







// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleList
entryRuleList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListRule()); }
	 iv_ruleList=ruleList 
	 { $current=$iv_ruleList.current; } 
	 EOF 
;

// Rule List
ruleList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListAccess().getListAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListAccess().getEntriesAtomicVariableExpressionObjectParserRuleCall_2_0()); 
	    }
		lv_entries_2_0=ruleAtomicVariableExpressionObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRule());
	        }
       		add(
       			$current, 
       			"entries",
        		lv_entries_2_0, 
        		"AtomicVariableExpressionObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getListAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListAccess().getEntriesAtomicVariableExpressionObjectParserRuleCall_3_1_0()); 
	    }
		lv_entries_4_0=ruleAtomicVariableExpressionObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRule());
	        }
       		add(
       			$current, 
       			"entries",
        		lv_entries_4_0, 
        		"AtomicVariableExpressionObject");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getListAccess().getRightSquareBracketKeyword_4());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


