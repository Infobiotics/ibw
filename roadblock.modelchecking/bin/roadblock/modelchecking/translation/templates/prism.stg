model(name, molecules, rules, rewards) ::= <<
ctmc

module <name>

	//*******************
	// molecular species
	//*******************
	<molecules:{molecule | <molecule>}; separator="\n">
    
	//*******************
	// rules
	//*******************
	<rules:{rule | <rule>}; separator="\n">
	
endmodule

//*******************
// reward structures
//*******************
<rewards:{reward | <reward>}; separator="\n\n">

>>

molecule(name, maxConcentration, initConcentration) ::= <<
<name> : [0..<maxConcentration>] init <initConcentration>;
>>

rule(guard, rate, updates) ::= <<
[] <guard> -> <rate> : <updates>;
>>

ruleWithoutRate(guard, updates) ::= <<
[] <guard> -> <updates>;
>>

ruleGuard(molecules) ::= <<
<molecules:{molecule | <molecule.name> > <molecule.multiplicity>}; separator=" & ">
>>

ruleMoleculeConsumption(molecules) ::= <<
<molecules:{molecule | (<molecule.name>' = <molecule.name> - <molecule.multiplicity>)}; separator=" & ">
>>

ruleMoleculeProduction(molecules) ::= <<
<molecules:{molecule | (<molecule.name>' = <molecule.name> + <molecule.multiplicity>)}; separator=" & ">
>> 

reward(molecule) ::= <<
rewards "<molecule>_rew"
    true : <molecule>;
endrewards
>>